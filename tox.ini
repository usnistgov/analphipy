[tox]
skipsdist=True

requires = tox-conda
envlist = py37, py38, py39, py310
# isolated_build = True

# [travis]
# python =
#     3.8: py38
#     3.7: py37
#     3.6: py36

# [testenv:flake8]
# basepython = python
# deps = flake8
# commands = flake8 analphipy tests

[base]
conda_env = environment.yaml
conda_deps =
           pytest
           pandas


[testenv]
# to use develop install
skip_install=False
usedevelop=True
conda_env = {[base]conda_env}
conda_deps = {[base]conda_deps}
commands =
         pytest {posargs}


[testenv:py39-{pypi-install, conda-install}]
skip_install=True
usedevelop=False
conda_channels =
               conda-forge
               wpk-nist
conda_deps =
           py{39}-{pypi-install, conda-install}: python=3.9
           {[base]conda_deps}
           py{39}-conda-install: analphipy
deps =
     py{39}-pypi-install: analphipy

changedir = {envtmpdir}
whitelist_externals = echo
commands =
         python --version
         echo $PWD
         pytest {posargs} {toxinidir}




[testenv:docs-nist-pages]
usedevelop = True
skipsdist=True
conda_env = environment.yaml
conda_deps =
           setuptools-scm # to get versioning correct on docs with editable install
           sphinx
           sphinx_rtd_theme
           nbsphinx
           ipython
whitelist_externals =
                    bash
                    open
changedir=docs-nist-pages/html
commands =
         bash ./cleanup.sh
         sphinx-build  --color -b html -d "{envtmpdir}/doctrees" ../../docs .
         open {toxinidir}/docs-nist-pages/html/index.html


[testenv:{pypi-build, pypi-test-release, pypi-release}]
envdir={toxworkdir}/pypi-build
skip_install=True
skipsdist=True
conda_deps =
           setuptools
           setuptools-scm
           twine
           setuptools_scm_git_archive
           build
whitelist_externals =
                    echo
                    rm
commands =
         pypi-build: rm -rf {toxworkdir}/pypi-dist
         pypi-build: python -m build --outdir "{toxworkdir}/pypi-dist/"

         pypi-test-release: twine upload --repository testpypi {toxworkdir}/pypi-dist/*
         pypi-release: twine upload {toxworkdir}/pypi-dist/*


[testenv:{grayskull, conda-build}]
envdir={toxworkdir}/conda-build
skip_install=True
skipsdist=True
conda_deps =
           anaconda-client
           grayskull
           conda-build
           setuptools
           setuptools-scm # for some reason, I need this to get the licensing right?
whitelist_externals =
                    echo
                    mkdir
                    cat
                    rm
changedir = {toxworkdir}/conda-dist
commands =
        grayskull: rm -rf analphipy
        grayskull: grayskull pypi analphipy
        grayskull: cat analphipy/meta.yaml

        conda-build: rm -rf build
        conda-build: mkdir -p build
        conda-build: conda-build . --output-folder=build
