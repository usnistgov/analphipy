[tox]
skipsdist=True
usedevelop=True

requires = tox-conda
#envlist =  py36, py37, py38, flake8
envlist = {py37, py38, py39, py310}-tests, {py39}-{pypi-install, conda-install}
# isolated_build = True

# [travis]
# python =
#     3.8: py38
#     3.7: py37
#     3.6: py36

# [testenv:flake8]
# basepython = python
# deps = flake8
# commands = flake8 analphipy tests

[testenv]
# to use develop install
skip_install =
             tests: False
             pypi-install: True
             conda-install: True
skipsdist =
          tests: False
          pypi-install: True
          conda-install: True
usedevelop =
           tests: True
           pypi-install: False
           conda-install: False
conda_env =
          tests: environment.yaml
conda_deps =
           pytest
           pandas
commands =
         tests: pytest {posargs}


[testenv:pypi-install]
deps =
     analphipy
changedir = {envtmpdir}
whitelist_externals = echo
commands =
         python --version
         echo $PWD

# pytest {posargs} {toxinidir}


[testenv:conda-install]
skip_install=True
usedevelop=False
conda_channels =
               wpk-nist-gov
               conda-forge
conda_deps =
         {[testenv]conda_deps}
         analphipy

commands =
         python --version
         {[testenv]commands}






[testenv:docs-nist-pages]
usedevelop = True
conda_env = environment.yaml
conda_deps =
           setuptools-scm # to get versioning correct on docs with editable install
           sphinx
           sphinx_rtd_theme
           nbsphinx
           ipython
whitelist_externals =
                    bash
                    open
changedir=docs-nist-pages/html
commands =
         bash ./cleanup.sh
         sphinx-build  --color -b html -d "{envtmpdir}/doctrees" ../../docs .
         open {toxinidir}/docs-nist-pages/html/index.html


[testenv:{pypi-build, pypi-test-release, pypi-release}]
envdir={toxworkdir}/pypi-build
skip_install=True
conda_deps =
           setuptools
           setuptools-scm
           twine
           setuptools_scm_git_archive
           build
whitelist_externals =
                    echo
                    rm
commands =
         pypi-build: rm -rf {toxworkdir}/pypi-dist
         pypi-build: python -m build --outdir "{toxworkdir}/pypi-dist/"

         pypi-test-release: twine upload --repository testpypi {toxworkdir}/pypi-dist/*
         pypi-release: twine upload {toxworkdir}/pypi-dist/*


[testenv:{grayskull, conda-build}]
envdir={toxworkdir}/conda-build
skip_install=True
conda_deps =
           anaconda-client
           grayskull
           conda-build
           setuptools
           setuptools-scm # for some reason, I need this to get the licensing right?
whitelist_externals =
                    echo
                    mkdir
                    cat
                    rm
changedir = {toxworkdir}/conda-dist
commands =
        grayskull: rm -rf analphipy
        grayskull: grayskull pypi analphipy
        grayskull: cat analphipy/meta.yaml

        conda-build: rm -rf build
        conda-build: mkdir -p build
        conda-build: conda-build . --output-folder=build
