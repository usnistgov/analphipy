Search.setIndex({"docnames": ["authors", "changelog", "contributing", "examples/index", "examples/usage/usage", "index", "installation", "license", "navigation", "reference/generated/analphipy.base_potential", "reference/generated/analphipy.measures", "reference/generated/analphipy.norofrenkel", "reference/generated/analphipy.potential", "reference/generated/analphipy.utils", "reference/index"], "filenames": ["authors.md", "changelog.md", "contributing.md", "examples/index.md", "examples/usage/usage.ipynb", "index.md", "installation.md", "license.md", "navigation.md", "reference/generated/analphipy.base_potential.rst", "reference/generated/analphipy.measures.rst", "reference/generated/analphipy.norofrenkel.rst", "reference/generated/analphipy.potential.rst", "reference/generated/analphipy.utils.rst", "reference/index.rst"], "titles": ["Credits", "Changelog", "Contributing", "User guide", "Why <code class=\"docutils literal notranslate\"><span class=\"pre\">analphipy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">analphipy</span></code>", "Installation", "License", "Indices and tables", "Base classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.base_potential</span></code>)", "Routines to calculate measures of pair potentials (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.measures</span></code>)", "Noro-Frenkel pair potential analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.norofrenkel</span></code>)", "Classes/routines for pair potentials (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.potential</span></code>)", "Utilities module (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.utils</span></code>)", "API Reference"], "terms": {"william": 0, "p": [0, 2, 4, 10], "krekelberg": 0, "mailto": 0, "wpk": [0, 5, 6], "nist": [0, 2, 5, 6, 7], "gov": 0, "none": [0, 4, 9, 10, 11, 12, 13], "yet": 0, "why": [0, 3, 5], "first": [0, 4], "analphipi": [1, 2, 3, 6], "see": [1, 2, 4, 10, 11], "fragment": [1, 2], "file": [1, 2, 4], "d": [1, 4, 9, 10, 11, 12], "full": 1, "set": [1, 2, 4, 9, 12], "chang": [2, 5], "ar": [2, 4, 5, 7, 10, 11, 13], "welcom": 2, "thei": 2, "greatli": 2, "appreci": 2, "everi": 2, "littl": 2, "bit": 2, "help": 2, "credit": [2, 5], "alwai": [2, 4, 6], "given": [2, 4], "you": [2, 4, 6], "can": [2, 4, 6, 10], "mani": 2, "wai": [2, 7], "usnistgov": [2, 6], "issu": 2, "If": [2, 4, 9, 10, 11, 12, 13], "pleas": [2, 4, 5], "includ": [2, 4, 5, 7], "your": [2, 3, 5, 6], "oper": 2, "system": 2, "name": [2, 6, 11, 12], "version": [5, 12], "ani": [2, 4, 7], "detail": 2, "about": 2, "local": 2, "might": 2, "troubleshoot": 2, "step": 2, "reproduc": 2, "look": [2, 4], "through": 2, "github": [2, 6], "anyth": 2, "tag": 2, "want": [2, 4, 5], "i": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13], "open": 2, "whoever": 2, "enhanc": 2, "could": [2, 4], "more": [2, 4, 10], "whether": [2, 7], "part": [2, 11], "offici": 2, "docstr": 2, "even": [2, 12], "web": 2, "blog": 2, "post": 2, "articl": 2, "The": [2, 4, 5, 6, 10, 11], "best": 2, "send": 2, "an": [2, 4, 7, 11, 12], "propos": 2, "explain": 2, "how": 2, "would": 2, "work": [2, 7], "keep": 2, "scope": 2, "narrow": 2, "possibl": 2, "make": 2, "easier": 2, "rememb": 2, "thi": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13], "volunt": 2, "driven": 2, "project": [2, 4], "host": 2, "tool": 2, "hopefulli": 2, "develop": [1, 2, 5, 7], "we": [2, 4], "recommend": 2, "instal": [2, 5], "some": [2, 4], "wide": 2, "For": [2, 4, 9, 10, 11, 12, 13], "either": [2, 6, 7, 12], "pipx": 2, "condax": 2, "mostli": 2, "conda": [2, 5, 6], "choic": 2, "actual": 2, "mamba": [2, 6], "altern": 2, "faster": 2, "solver": 2, "here": [2, 10, 12], "addit": [2, 4], "pre": [1, 2, 5, 11], "commit": [1, 2], "cruft": 2, "merg": 2, "scriv": 2, "These": 2, "follow": [2, 4, 5], "inject": 2, "commitizen": 2, "env": [1, 2, 6], "updat": [1, 2, 13], "n": [2, 5, 6, 9, 10, 11, 12, 13], "yaml": [2, 6], "readi": 2, "": [2, 4, 10, 11, 12], "up": 2, "fork": 2, "clone": [2, 6], "git": [2, 6], "com": [2, 6], "your_name_her": 2, "submodul": 2, "add": 2, "them": 2, "initi": 2, "close": 2, "recurs": 2, "after": 2, "cd": 2, "init": 2, "creat": [2, 4, 5, 6, 9, 11, 12], "dev": 2, "To": [2, 4, 6], "recip": 2, "period": 2, "run": [2, 6], "autoupd": 2, "over": [2, 4, 9, 10, 11, 12, 13], "time": [2, 4], "clean": 2, "old": 2, "gc": 2, "edit": 2, "packag": [1, 4, 5], "pip": [2, 5, 6], "e": [2, 6, 9, 13], "dep": [2, 6], "branch": 2, "checkout": 2, "b": [2, 4, 10, 13], "bugfix": 2, "now": [1, 2, 4], "flow": 2, "when": 2, "re": 2, "done": [2, 4], "check": 2, "pass": [2, 4, 10, 12, 13], "test": [2, 11], "all": [2, 7], "pytest": 2, "against": 2, "multipl": [2, 11, 13], "python": [2, 4, 5], "changelog": [2, 5], "info": [2, 4, 10], "push": 2, "m": [2, 4, 5, 11, 12], "descript": 2, "origin": 2, "note": [2, 4, 10, 12], "hook": 2, "forc": [2, 4, 9, 11, 12], "messag": 2, "convent": [2, 11], "sytl": 2, "assist": 2, "mai": 2, "cz": 2, "websit": 2, "need": [2, 4], "place": 2, "few": 2, "locat": [2, 4, 9, 11, 13], "which": [2, 4, 9, 11, 12, 13], "natur": 2, "section": [2, 7], "pyproject": 2, "toml": 2, "extra": [2, 9, 10, 11, 12, 13], "total": [2, 10], "exampl": [2, 3, 9, 10], "combin": [2, 10, 13], "produc": 2, "autom": 2, "makefil": 2, "also": [2, 7, 10], "do": [2, 4], "rebuild": 2, "befor": 2, "meet": 2, "should": [2, 4, 7, 9, 11, 12, 13], "function": [2, 4, 10, 11, 12, 13], "put": 2, "new": [1, 2, 4, 9], "list": [2, 10, 11, 13], "readm": [], "rst": [], "3": [2, 4, 5, 11], "8": [2, 4], "9": [2, 4], "10": 2, "isol": 2, "command": [2, 6], "spellcheck": 2, "spell": 2, "releas": [2, 5], "correct": 2, "distribut": [2, 7], "live": 2, "most": [2, 4, 6], "task": 2, "have": [2, 4, 6, 11], "posarg": 2, "r": [2, 4, 9, 10, 11, 12, 13], "where": [2, 4, 9, 11, 12], "ghp": 2, "import": [2, 4, 5], "call": [2, 4, 9, 11], "page": 2, "ini": 2, "dist": 2, "pypi": 2, "testreleas": 2, "distro": 2, "testpypi": 2, "grayskul": 2, "manual": 2, "ad": [2, 4], "channel": 2, "one": [2, 5], "remot": 2, "py": [2, 4], "38": 2, "39": 2, "310": 2, "us": [3, 5, 6, 7, 9, 10, 11, 12], "refer": [3, 5, 10, 11], "A": [3, 5, 7, 11], "simpl": [3, 5, 11], "defin": [3, 5, 10, 11, 12], "own": [3, 5], "potenti": [3, 5, 9, 13], "cut": [3, 5, 9, 12, 13], "common": 4, "analysi": [4, 5], "pair": [4, 5, 9], "It": [4, 5], "featur": 4, "interfac": [4, 5], "method": [2, 4, 6, 9, 10, 11, 12], "linear": [4, 9, 12], "shift": [4, 9, 12], "tabl": [4, 5, 11, 12], "calcul": [4, 5, 11, 12], "metric": [4, 5], "like": [4, 9, 11, 12, 13], "second": [4, 10, 11], "virial": [4, 10, 11], "coeffici": [4, 10, 11], "noro": [4, 5], "frenkel": [4, 5], "effect": [4, 5, 11], "paramet": [4, 5, 9, 10, 11, 12, 13], "activ": [4, 5], "author": [4, 5], "so": [4, 9, 12], "suggest": [4, 5], "let": 4, "know": 4, "primer": 4, "type": [4, 5], "provid": [4, 5, 7], "g": [4, 11], "2000": [4, 11], "extend": [4, 5, 11], "correspond": [4, 11, 13], "state": [4, 7, 11], "behavior": [4, 11], "particl": [4, 11], "variabl": [4, 11], "rang": [4, 9, 10, 11, 12, 13], "attract": [4, 11, 12], "journal": [4, 11], "chemic": [4, 11], "physic": [4, 11], "113": [4, 11], "2941": [4, 11], "j": [4, 11], "barker": [4, 11], "henderson": [4, 11], "1976": [4, 11], "what": [4, 11], "liquid": [4, 11], "understand": [4, 11], "matter": [4, 11], "review": [4, 11], "modern": [4, 11], "48": [4, 11], "587": [4, 11], "671": [4, 11], "week": [4, 11], "chandler": [4, 11], "h": [4, 11, 12], "c": [4, 5, 6, 11], "andersen": [4, 11], "1971": [4, 11], "role": [4, 11], "repuls": [4, 11], "determin": [4, 9, 11], "equilibrium": [4, 11], "structur": [4, 11], "54": [4, 11], "5237": [4, 11], "5247": [4, 11], "take": 4, "properti": [4, 7, 12], "lennard": [4, 12], "jone": [4, 12], "lj": [4, 12], "ha": 4, "length": [4, 10, 12], "scale": [4, 12], "sigma": [4, 10, 11, 12], "energi": [4, 10, 11, 12], "epsilon": [4, 10, 11, 12], "typic": 4, "consid": [4, 7, 10], "unit": [4, 7], "term": 4, "same": [4, 11], "1": [4, 5, 9, 10, 11, 12, 13], "object": [4, 9, 10, 11, 12, 13], "lennardjon": [4, 5, 12], "sig": [4, 5, 10, 11, 12], "0": [4, 5, 9, 10, 11, 12, 13], "ep": [4, 5, 10, 11, 12], "r_min": [4, 5, 9, 11, 12], "122462048309373": 4, "to_measur": [4, 5, 9], "measur": [4, 5, 9], "0x10941dea0": [], "contain": 4, "thing": 4, "phi": [4, 5, 9, 10, 11, 12, 13], "deriv": [4, 9, 10, 11, 12], "dphidr": [4, 5, 9, 12], "minimum": [4, 9, 11, 12, 13], "analyt": [4, 5, 12], "valu": [4, 9, 10, 11, 12, 13], "phi_min": [4, 5, 9, 11, 12], "matplotlib": 4, "inlin": 4, "pyplot": 4, "plt": 4, "numpi": 4, "np": [4, 10], "linspac": 4, "2": [4, 5, 9, 10, 11, 12, 13], "5": [4, 5, 12], "100": 4, "fig": 4, "ax": 4, "subplot": 4, "set_titl": 4, "plot": 4, "marker": 4, "o": 4, "tight_layout": 4, "question": 4, "interest": 4, "other": [4, 10], "perhap": 4, "simpler": 4, "map": [4, 10, 11], "hard": [4, 11, 12], "sphere": [4, 11, 12], "squar": [4, 10, 11, 12], "well": [4, 10, 11, 12], "There": [2, 4], "deep": 4, "histori": 4, "In": 4, "brief": 4, "commonli": 4, "design": 4, "temperatur": [4, 10, 11], "depend": [4, 5, 6], "diamet": [4, 11], "depth": 4, "abov": 4, "further": 4, "inform": [4, 10, 13], "perform": [4, 5, 9, 10, 11, 12, 13], "our": 4, "norofrenkel": [4, 5, 9], "norofrenkelpair": [4, 5, 9, 11], "conveni": [2, 4, 10], "nf": [4, 9], "to_nf": [4, 5, 9], "invers": [4, 10, 11], "beta": [4, 10, 11], "k_": 4, "rm": [4, 9, 11], "t": [4, 11], "boltzmann": [4, 10], "constant": 4, "0156054202252172": 4, "line": 4, "line2d": 4, "0x10a9df250": [], "likewis": 4, "lambda": [4, 10, 11, 12], "found": [4, 9, 13], "lam": [4, 5, 10, 11, 12], "0x196b443d0": [], "sinc": 4, "spectrum": 4, "util": [4, 5, 9, 10, 11], "dictionari": [4, 9, 11], "result": [4, 7, 10], "easili": 4, "convert": [4, 9], "panda": 4, "datafram": 4, "4": [4, 5, 10, 12], "prop": [4, 11], "arrai": [4, 9, 11, 12, 13], "9468474615554747": 4, "0072387682627164": 4, "0274539879239069": 4, "0389955732798468": 4, "6162246932413373": 4, "4699861479698415": 4, "3923506242906025": 4, "333901317192492": 4, "pd": 4, "946847": 4, "616225": 4, "007239": 4, "469986": 4, "027454": 4, "392351": 4, "038996": 4, "333901": 4, "sever": [4, 5], "modul": [4, 5, 8], "api": [4, 5], "two": [2, 4, 10, 13], "rout": 4, "easiest": 4, "callabl": [4, 10, 11, 12, 13], "gener": [4, 5, 12], "def": 4, "my_lj_func": 4, "return": [4, 9, 10, 11, 12, 13], "asarrai": 4, "x": [4, 10], "12": [4, 12], "6": [4, 5, 12], "onli": 4, "partial": 4, "from": [2, 4, 5, 7, 9, 10, 11, 12, 13], "functool": 4, "phi_func": [4, 5, 12], "segment": [4, 5, 9, 10, 11, 12, 13], "0x19875d3f0": [], "dphidr_func": [4, 5, 12], "00000000e": 4, "00": 4, "55111512e": 4, "17": [4, 7], "46944695e": 4, "18": 4, "requir": 4, "explicitli": 4, "desir": 4, "form": [4, 9, 12, 13], "dr": [4, 9, 10, 11, 12], "my_lj_deriv_func": 4, "infint": 4, "integr": [4, 9, 10, 11, 12, 13], "bound": [4, 5, 9, 11, 12, 13], "inf": [4, 12], "22044605e": 4, "16": 4, "investig": 4, "must": 4, "latter": 4, "discontinu": [4, 13], "wa": [4, 7], "directli": 4, "dure": 4, "creation": [4, 5], "numer": [4, 9, 11], "rais": 4, "error": [4, 7, 10, 11, 13], "becaus": 4, "don": 4, "valueerror": 4, "traceback": 4, "recent": [4, 6], "last": 4, "cell": 4, "15": [], "document": [4, 5, 7], "src": 4, "base_potenti": [4, 5, 10, 11, 12], "288": 4, "phiabstract": [4, 5, 9], "self": [4, 9, 10], "kw": [4, 9, 10, 11, 12, 13], "273": [], "274": [], "class": [4, 5, 10, 11, 13], "275": 4, "285": [], "286": [], "287": 4, "290": 4, "k": 4, "291": [], "instead": 4, "g_with_min": 4, "assign_min_numer": [4, 5, 9], "r0": [4, 9, 13], "guess": [4, 9, 11, 13], "search": [4, 9], "3815918477142934": 4, "3815918477142932": 4, "mean": [4, 9], "phibas": [4, 5, 9, 10, 11, 12], "p_cut": 4, "016316891136000003": 4, "0x198918550": [], "lf": [4, 5, 9, 12], "p_lf": 4, "rcut": [4, 5, 9, 12, 13], "03899948": 4, "03899947745280001": 4, "specifi": [4, 12], "fluid": [5, 10, 11], "main": 5, "classic": 5, "model": 5, "routin": [5, 11], "spheric": [5, 10], "symmetr": [5, 10], "user": 5, "jensen": [5, 10], "shannon": [5, 10], "diverg": [5, 10], "feel": 5, "free": [5, 7], "pull": 5, "request": 5, "stabl": 5, "sourc": [5, 9, 10, 11, 12, 13], "guid": 5, "lennardjonesnm": [5, 12], "yukawa": [5, 12], "z": [5, 12], "hardspher": [5, 12], "squarewel": [5, 12], "cubict": [5, 12], "phi_tabl": [5, 12], "phi_left": [5, 12], "phi_right": [5, 12], "dphi_left": [5, 12], "dphi_right": [5, 12], "from_phi": [5, 11, 12], "size": [5, 12], "smin": [5, 12], "smax": [5, 12], "phidphi": [5, 12], "rsq_tabl": [5, 12], "r_tabl": [5, 12], "factori": [5, 12], "sig_nf": [5, 11], "sig_nf_dbeta": [5, 11], "lam_nf": [5, 11], "lam_nf_dbeta": [5, 11], "phi_rep": [5, 11], "from_phi_class": [5, 11], "secondviri": [5, 10, 11], "sw_dict": [5, 11], "secondvirial_dbeta": [5, 10, 11], "sig_dbeta": [5, 11], "lam_dbeta": [5, 11], "secondvirial_sw": [5, 10, 11], "b2": [5, 10, 11], "b2_dbeta": [5, 11], "b2_sw": [5, 11], "boltz_diverg_j": [5, 10], "mayer_diverg_j": [5, 10], "diverg_kl_cont": [5, 10], "diverg_js_cont": [5, 10], "combine_segmet": [5, 13], "quad_seg": [5, 10, 11, 13], "minimize_phi": [5, 9, 11, 13], "segments_to_segments_cut": [5, 13], "phi_to_phi_cut": [], "phi_to_phi_lf": [], "base": [5, 7, 10, 11, 12], "asdict": [5, 9], "new_lik": [5, 9], "assign": [5, 9], "minim": [5, 9, 13], "phicutbas": [5, 9], "phi_bas": [5, 9], "phicut": [5, 9, 12], "philf": [5, 9, 12], "licens": 5, "contribut": 5, "report": 5, "bug": 5, "fix": 5, "implement": 5, "write": 5, "submit": 5, "feedback": 5, "get": 5, "environ": [5, 6], "setup": 5, "repo": [5, 6], "manag": 5, "guidelin": 5, "build": [5, 10], "doc": 5, "tox": [1, 5], "lead": 5, "contributor": 5, "unreleas": 5, "v0": 5, "2023": 5, "03": 5, "22": 5, "2022": 5, "09": 5, "27": 5, "26": 5, "indic": 5, "index": [5, 8], "termin": 6, "prefer": 6, "process": [], "download": 6, "public": [6, 7], "repositori": 6, "onc": 6, "copi": [6, 7], "code": 7, "block": [], "consol": [], "f": [6, 10], "option": [2, 9, 10, 11, 12, 13], "softwar": 7, "employe": 7, "nation": 7, "institut": 7, "standard": 7, "technologi": 7, "agenc": 7, "feder": 7, "govern": 7, "pursuant": 7, "titl": 7, "105": 7, "subject": 7, "copyright": 7, "protect": 7, "domain": 7, "permiss": 7, "freeli": 7, "modifi": 7, "its": 7, "without": 7, "fee": 7, "herebi": 7, "grant": 7, "notic": 7, "disclaim": 7, "warranti": 7, "appear": 7, "THE": 7, "AS": 7, "OF": 7, "kind": 7, "express": 7, "impli": 7, "OR": 7, "statutori": 7, "BUT": 7, "NOT": 7, "limit": [7, 9, 10, 11, 12, 13], "TO": 7, "THAT": 7, "WILL": 7, "conform": 7, "specif": [7, 12], "merchant": 7, "fit": 7, "FOR": 7, "particular": [7, 12], "purpos": 7, "AND": 7, "freedom": 7, "infring": 7, "BE": 7, "IN": 7, "NO": 7, "event": 7, "shall": 7, "liabl": 7, "damag": 7, "direct": 7, "indirect": 7, "special": 7, "consequenti": 7, "aris": 7, "out": 7, "connect": 7, "WITH": 7, "upon": 7, "contract": 7, "tort": 7, "otherwis": [7, 13], "injuri": 7, "sustain": 7, "BY": 7, "person": 7, "loss": 7, "aros": 7, "servic": 7, "hereund": 7, "statement": 7, "third": 7, "parti": 7, "legal": 7, "bundl": 7, "complianc": 7, "condit": 7, "those": 7, "abstract": 9, "inherit": 9, "float": [9, 10, 11, 12, 13], "posit": [9, 12, 13], "sequenc": [9, 10, 11, 12, 13], "int": [9, 10, 11, 12, 13], "len": [9, 10, 11, 12, 13], "attribut": [9, 12], "alia": [9, 11], "separ": [9, 11, 12], "ndarrai": [9, 10, 11, 12], "evalu": [9, 10, 12], "tupl": [9, 13], "lower_bound": [9, 13], "upper_bound": [9, 13], "argument": [9, 10, 11, 12, 13], "rmin": [9, 12, 13], "phimin": [9, 13], "output": [9, 10, 11, 12, 13], "scipi": [9, 10, 11, 13], "optim": [9, 13], "minima": 9, "constructor": [9, 12], "semgnet": 9, "default": [2, 9, 11, 12, 13], "phi_": [9, 11], "begin": [9, 10, 11, 12], "case": [9, 10, 11, 12], "text": 9, "_vcorrect": 9, "r_": 9, "leq": [9, 10, 11, 12], "end": [9, 10, 11, 12], "frac": [9, 10, 11, 12], "_dvdrcorrect": 9, "just": 9, "v": [2, 9], "dvrcut": 9, "dv": 9, "_dvcorrect": 9, "instanc": [9, 11], "sub": 9, "r_cut": 9, "left": [9, 10, 11, 12], "right": [9, 10, 11, 12], "_": 9, "quad_kw": [10, 11], "err": [10, 11, 13], "fals": [10, 11, 12, 13], "full_output": [10, 11, 13], "bool": [10, 11, 12, 13], "true": [10, 11, 12, 13], "quad": [10, 11, 13], "db2dbeta": 10, "beta_oth": 10, "volum": 10, "3d": 10, "factor": 10, "exp": [10, 11, 12], "wrap": 10, "compar": 10, "str": 10, "element": 10, "pi": 10, "string": [10, 11], "1d": 10, "2d": 10, "assum": [2, 10], "http": 10, "en": 10, "wikipedia": 10, "org": 10, "wiki": 10, "kullback": 10, "e2": 10, "80": 10, "93leibler_diverg": 10, "symmetrised_diverg": 10, "mayer": 10, "volume_int_func": 10, "b_2": 10, "sw": [10, 11, 12], "infti": [10, 11, 12], "width": [10, 12], "q": 10, "segments_q": 10, "continu": 10, "leibler": 10, "pdf": 10, "probabl": 10, "suppli": 10, "kb": [], "leibel": 10, "jeffrei": [], "collect": 11, "analyz": 11, "formula": 11, "sigma_": 11, "bh": 11, "int_0": 11, "rep": 11, "sum": [11, 13], "respect": 11, "ref": 11, "match": 11, "w": 11, "anderson": 11, "decomposit": 11, "distanc": 11, "phi_ref": 11, "classmethod": [11, 12], "find": [11, 13], "try": 11, "comput": 11, "equal": 11, "view": 11, "key_format": 11, "access": 11, "each": [11, 13], "kei": 11, "format": 11, "dict": 11, "subclass": 12, "dphi": 12, "equival": 12, "core": 12, "interact": 12, "math": 12, "insid": 12, "neg": 12, "_noth": 12, "noth": 12, "cubic": 12, "interpol": 12, "sqrt": 12, "maximum": 12, "grid": 12, "rmax": 12, "space": 12, "less": 12, "potential_nam": 12, "construct": 12, "nm": 12, "yk": 12, "sort": 13, "uniqu": 13, "func": 13, "arg": 13, "sum_integr": 13, "sum_error": 13, "quadratur": 13, "across": 13, "meta": [], "input": [], "phi_cut": [], "dphidr_cut": [], "0x10d2ed300": [], "0x19fb3d090": [], "0x19fbbe3b0": [], "0x19fbdad40": [], "276": 4, "277": 4, "289": 4, "292": 4, "293": 4, "0x19fbecca0": [], "bash": [], "ipykernel": 2, "displai": 2, "meaning": 2, "kernel": 2, "nb": [], "alternativlei": 2, "central": 2, "environment": 2, "current": 2, "addition": 2, "lint": 2, "markdown": 2, "codespel": 2, "symlink": 2, "0x10d1ee290": 4, "0x19fa3d000": 4, "0x19fabe470": 4, "0x19fadad40": 4, "0x19fa89300": 4, "layout": 1, "linter": 1, "via": 1, "handl": [1, 2], "nb_conda_kernel": 2, "md": 2, "bracket": 2, "choosen": 2, "04": 5, "24": 5, "setuptools_scm": 2, "pacakg": 2, "overrid": 2, "major": 2, "minor": 2, "micro": 2, "etc": 2, "livehtml": 2, "release_arg": 2, "rac": [], "eta": []}, "objects": {"analphipy": [[9, 0, 0, "-", "base_potential"], [10, 0, 0, "-", "measures"], [11, 0, 0, "-", "norofrenkel"], [12, 0, 0, "-", "potential"], [13, 0, 0, "-", "utils"]], "analphipy.base_potential": [[9, 1, 1, "", "PhiAbstract"], [9, 1, 1, "", "PhiBase"], [9, 1, 1, "", "PhiCut"], [9, 1, 1, "", "PhiCutBase"], [9, 1, 1, "", "PhiLFS"]], "analphipy.base_potential.PhiAbstract": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiBase": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "cut"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "lfs"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiCut": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_base"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "rcut"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiCutBase": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_base"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "rcut"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiLFS": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_base"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "rcut"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.measures": [[10, 1, 1, "", "Measures"], [10, 4, 1, "", "diverg_js_cont"], [10, 4, 1, "", "diverg_kl_cont"], [10, 4, 1, "", "secondvirial"], [10, 4, 1, "", "secondvirial_dbeta"], [10, 4, 1, "", "secondvirial_sw"]], "analphipy.measures.Measures": [[10, 2, 1, "", "boltz_diverg_js"], [10, 2, 1, "", "mayer_diverg_js"], [10, 2, 1, "", "secondvirial"], [10, 2, 1, "", "secondvirial_dbeta"]], "analphipy.norofrenkel": [[11, 1, 1, "", "NoroFrenkelPair"], [11, 4, 1, "", "lam_nf"], [11, 4, 1, "", "lam_nf_dbeta"], [11, 4, 1, "", "sig_nf"], [11, 4, 1, "", "sig_nf_dbeta"]], "analphipy.norofrenkel.NoroFrenkelPair": [[11, 2, 1, "", "B2"], [11, 2, 1, "", "B2_dbeta"], [11, 2, 1, "", "B2_sw"], [11, 2, 1, "", "eps"], [11, 2, 1, "", "from_phi"], [11, 2, 1, "", "from_phi_class"], [11, 2, 1, "", "lam"], [11, 2, 1, "", "lam_dbeta"], [11, 2, 1, "", "phi_rep"], [11, 2, 1, "", "secondvirial"], [11, 2, 1, "", "secondvirial_dbeta"], [11, 2, 1, "", "secondvirial_sw"], [11, 2, 1, "", "sig"], [11, 2, 1, "", "sig_dbeta"], [11, 2, 1, "", "sw_dict"], [11, 2, 1, "", "table"]], "analphipy.potential": [[12, 1, 1, "", "Analytic"], [12, 1, 1, "", "CubicTable"], [12, 1, 1, "", "Generic"], [12, 1, 1, "", "HardSphere"], [12, 1, 1, "", "LennardJones"], [12, 1, 1, "", "LennardJonesNM"], [12, 1, 1, "", "SquareWell"], [12, 1, 1, "", "Yukawa"], [12, 4, 1, "", "factory"]], "analphipy.potential.Analytic": [[12, 3, 1, "", "phi_min"], [12, 3, 1, "", "r_min"], [12, 3, 1, "", "segments"]], "analphipy.potential.CubicTable": [[12, 3, 1, "", "bounds"], [12, 3, 1, "", "dphi_left"], [12, 3, 1, "", "dphi_right"], [12, 2, 1, "", "dphidr"], [12, 2, 1, "", "from_phi"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "phi_left"], [12, 3, 1, "", "phi_right"], [12, 3, 1, "", "phi_table"], [12, 2, 1, "", "phidphi"], [12, 5, 1, "", "r_table"], [12, 5, 1, "", "rsq_table"], [12, 5, 1, "", "size"], [12, 5, 1, "", "smax"], [12, 5, 1, "", "smin"]], "analphipy.potential.Generic": [[12, 2, 1, "", "dphidr"], [12, 3, 1, "", "dphidr_func"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "phi_func"]], "analphipy.potential.HardSphere": [[12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.LennardJones": [[12, 2, 1, "", "dphidr"], [12, 3, 1, "", "eps"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.LennardJonesNM": [[12, 2, 1, "", "dphidr"], [12, 3, 1, "", "eps"], [12, 3, 1, "", "m"], [12, 3, 1, "", "n"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.SquareWell": [[12, 3, 1, "", "eps"], [12, 3, 1, "", "lam"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.Yukawa": [[12, 3, 1, "", "eps"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"], [12, 3, 1, "", "z"]], "analphipy.utils": [[13, 4, 1, "", "combine_segmets"], [13, 4, 1, "", "minimize_phi"], [13, 4, 1, "", "quad_segments"], [13, 4, 1, "", "segments_to_segments_cut"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"credit": 0, "develop": 0, "lead": 0, "contributor": 0, "changelog": 1, "unreleas": 1, "v0": 1, "0": 1, "6": 1, "2023": 1, "03": 1, "22": 1, "5": 1, "4": 1, "2022": 1, "09": 1, "27": 1, "3": 1, "26": 1, "2": 1, "1": 1, "contribut": 2, "type": 2, "report": 2, "bug": 2, "fix": 2, "implement": 2, "featur": [2, 5], "write": 2, "document": 2, "submit": 2, "feedback": 2, "get": 2, "start": [2, 5], "environ": 2, "setup": 2, "repo": 2, "depend": 2, "manag": 2, "pull": 2, "request": 2, "guidelin": 2, "build": 2, "doc": 2, "us": [2, 4], "tox": 2, "user": 3, "guid": 3, "why": 4, "analphipi": [4, 5, 9, 10, 11, 12, 13], "refer": [4, 14], "A": 4, "simpl": 4, "exampl": [4, 5], "defin": 4, "your": 4, "own": 4, "potenti": [4, 10, 11, 12], "cut": 4, "overview": 5, "statu": 5, "quick": 5, "usag": 5, "instal": 6, "stabl": 6, "releas": 6, "from": 6, "sourc": 6, "licens": 7, "indic": 8, "tabl": 8, "base": 9, "class": [9, 12], "base_potenti": 9, "routin": [10, 12], "calcul": 10, "measur": 10, "pair": [10, 11, 12], "noro": 11, "frenkel": 11, "analysi": 11, "norofrenkel": 11, "util": 13, "modul": 13, "api": 14, "04": 1, "24": 1, "chang": 1, "packag": 2, "version": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Credits": [[0, "credits"]], "Development Lead": [[0, "development-lead"]], "Contributors": [[0, "contributors"]], "Changelog": [[1, "changelog"]], "Unreleased": [[1, "unreleased"]], "v0.1.0 \u2014 2023-04-24": [[1, "v0-1-0-2023-04-24"]], "Changed": [[1, "changed"]], "v0.0.6 - 2023-03-22": [[1, "v0-0-6-2023-03-22"]], "v0.0.5 - 2023-03-22": [[1, "v0-0-5-2023-03-22"]], "v0.0.4 - 2022-09-27": [[1, "v0-0-4-2022-09-27"]], "v0.0.3 - 2022-09-26": [[1, "v0-0-3-2022-09-26"]], "v0.0.2 - 2022-09-26": [[1, "v0-0-2-2022-09-26"]], "v0.0.1 - 2022-09-26": [[1, "v0-0-1-2022-09-26"]], "Contributing": [[2, "contributing"]], "Types of Contributions": [[2, "types-of-contributions"]], "Report Bugs": [[2, "report-bugs"]], "Fix Bugs": [[2, "fix-bugs"]], "Implement Features": [[2, "implement-features"]], "Write Documentation": [[2, "write-documentation"]], "Submit Feedback": [[2, "submit-feedback"]], "Get Started": [[2, "get-started"]], "Environment setup": [[2, "environment-setup"]], "Getting the repo": [[2, "getting-the-repo"]], "Dependency management": [[2, "dependency-management"]], "Pull Request Guidelines": [[2, "pull-request-guidelines"]], "Building the docs": [[2, "building-the-docs"]], "Using tox": [[2, "using-tox"]], "Package version": [[2, "package-version"]], "User guide": [[3, "user-guide"]], "Why analphipy": [[4, "why-analphipy"]], "Useful references": [[4, "useful-references"]], "A simple example": [[4, "a-simple-example"]], "Defining your own potential": [[4, "defining-your-own-potential"]], "Cut potential": [[4, "cut-potential"]], "analphipy": [[5, "analphipy"]], "Overview": [[5, "overview"]], "Features": [[5, "features"]], "Status": [[5, "status"]], "Quick start": [[5, "quick-start"]], "Example usage": [[5, "example-usage"]], "Installation": [[6, "installation"]], "Stable release": [[6, "stable-release"]], "From sources": [[6, "from-sources"]], "License": [[7, "license"]], "Indices and tables": [[8, "indices-and-tables"]], "Base classes (analphipy.base_potential)": [[9, "base-classes-analphipy-base-potential"]], "Routines to calculate measures of pair potentials (analphipy.measures)": [[10, "routines-to-calculate-measures-of-pair-potentials-analphipy-measures"]], "Noro-Frenkel pair potential analysis (analphipy.norofrenkel)": [[11, "noro-frenkel-pair-potential-analysis-analphipy-norofrenkel"]], "Classes/routines for pair potentials (analphipy.potential)": [[12, "classes-routines-for-pair-potentials-analphipy-potential"]], "Utilities module (analphipy.utils)": [[13, "utilities-module-analphipy-utils"]], "API Reference": [[14, "api-reference"]]}, "indexentries": {"phiabstract (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiAbstract"]], "phibase (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiBase"]], "phicut (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiCut"]], "phicutbase (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiCutBase"]], "philfs (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiLFS"]], "analphipy.base_potential": [[9, "module-analphipy.base_potential"]], "asdict() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.asdict"]], "asdict() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.asdict"]], "asdict() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.asdict"]], "asdict() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.asdict"]], "asdict() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.asdict"]], "assign() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.assign"]], "assign() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.assign"]], "assign() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.assign"]], "assign() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.assign"]], "assign() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.assign"]], "assign_min_numeric() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.assign_min_numeric"]], "cut() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.cut"]], "dphidr() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.dphidr"]], "dphidr() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.dphidr"]], "dphidr() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.dphidr"]], "dphidr() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.dphidr"]], "dphidr() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.dphidr"]], "lfs() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.lfs"]], "minimize() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.minimize"]], "minimize() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.minimize"]], "minimize() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.minimize"]], "minimize() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.minimize"]], "minimize() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.minimize"]], "module": [[9, "module-analphipy.base_potential"], [10, "module-analphipy.measures"], [11, "module-analphipy.norofrenkel"], [12, "module-analphipy.potential"], [13, "module-analphipy.utils"]], "new_like() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.new_like"]], "new_like() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.new_like"]], "new_like() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.new_like"]], "new_like() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.new_like"]], "new_like() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.new_like"]], "phi() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.phi"]], "phi() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.phi"]], "phi() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.phi"]], "phi() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.phi"]], "phi() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.phi"]], "phi_base (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.phi_base"]], "phi_base (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.phi_base"]], "phi_base (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.phi_base"]], "phi_min (analphipy.base_potential.phiabstract attribute)": [[9, "analphipy.base_potential.PhiAbstract.phi_min"]], "phi_min (analphipy.base_potential.phibase attribute)": [[9, "analphipy.base_potential.PhiBase.phi_min"]], "phi_min (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.phi_min"]], "phi_min (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.phi_min"]], "phi_min (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.phi_min"]], "r_min (analphipy.base_potential.phiabstract attribute)": [[9, "analphipy.base_potential.PhiAbstract.r_min"]], "r_min (analphipy.base_potential.phibase attribute)": [[9, "analphipy.base_potential.PhiBase.r_min"]], "r_min (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.r_min"]], "r_min (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.r_min"]], "r_min (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.r_min"]], "rcut (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.rcut"]], "rcut (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.rcut"]], "rcut (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.rcut"]], "segments (analphipy.base_potential.phiabstract attribute)": [[9, "analphipy.base_potential.PhiAbstract.segments"]], "segments (analphipy.base_potential.phibase attribute)": [[9, "analphipy.base_potential.PhiBase.segments"]], "segments (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.segments"]], "segments (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.segments"]], "segments (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.segments"]], "to_measures() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.to_measures"]], "to_measures() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.to_measures"]], "to_measures() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.to_measures"]], "to_measures() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.to_measures"]], "to_measures() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.to_measures"]], "to_nf() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.to_nf"]], "to_nf() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.to_nf"]], "to_nf() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.to_nf"]], "to_nf() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.to_nf"]], "to_nf() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.to_nf"]], "measures (class in analphipy.measures)": [[10, "analphipy.measures.Measures"]], "analphipy.measures": [[10, "module-analphipy.measures"]], "boltz_diverg_js() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.boltz_diverg_js"]], "diverg_js_cont() (in module analphipy.measures)": [[10, "analphipy.measures.diverg_js_cont"]], "diverg_kl_cont() (in module analphipy.measures)": [[10, "analphipy.measures.diverg_kl_cont"]], "mayer_diverg_js() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.mayer_diverg_js"]], "secondvirial() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.secondvirial"]], "secondvirial() (in module analphipy.measures)": [[10, "analphipy.measures.secondvirial"]], "secondvirial_dbeta() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.secondvirial_dbeta"]], "secondvirial_dbeta() (in module analphipy.measures)": [[10, "analphipy.measures.secondvirial_dbeta"]], "secondvirial_sw() (in module analphipy.measures)": [[10, "analphipy.measures.secondvirial_sw"]], "b2() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.B2"]], "b2_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.B2_dbeta"]], "b2_sw() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.B2_sw"]], "norofrenkelpair (class in analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.NoroFrenkelPair"]], "analphipy.norofrenkel": [[11, "module-analphipy.norofrenkel"]], "eps() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.eps"]], "from_phi() (analphipy.norofrenkel.norofrenkelpair class method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.from_phi"]], "from_phi_class() (analphipy.norofrenkel.norofrenkelpair class method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.from_phi_class"]], "lam() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.lam"]], "lam_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.lam_dbeta"]], "lam_nf() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.lam_nf"]], "lam_nf_dbeta() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.lam_nf_dbeta"]], "phi_rep() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.phi_rep"]], "secondvirial() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial"]], "secondvirial_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial_dbeta"]], "secondvirial_sw() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial_sw"]], "sig() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.sig"]], "sig_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.sig_dbeta"]], "sig_nf() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.sig_nf"]], "sig_nf_dbeta() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.sig_nf_dbeta"]], "sw_dict() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.sw_dict"]], "table() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.table"]], "analytic (class in analphipy.potential)": [[12, "analphipy.potential.Analytic"]], "cubictable (class in analphipy.potential)": [[12, "analphipy.potential.CubicTable"]], "generic (class in analphipy.potential)": [[12, "analphipy.potential.Generic"]], "hardsphere (class in analphipy.potential)": [[12, "analphipy.potential.HardSphere"]], "lennardjones (class in analphipy.potential)": [[12, "analphipy.potential.LennardJones"]], "lennardjonesnm (class in analphipy.potential)": [[12, "analphipy.potential.LennardJonesNM"]], "squarewell (class in analphipy.potential)": [[12, "analphipy.potential.SquareWell"]], "yukawa (class in analphipy.potential)": [[12, "analphipy.potential.Yukawa"]], "analphipy.potential": [[12, "module-analphipy.potential"]], "bounds (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.bounds"]], "dphi_left (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.dphi_left"]], "dphi_right (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.dphi_right"]], "dphidr() (analphipy.potential.cubictable method)": [[12, "analphipy.potential.CubicTable.dphidr"]], "dphidr() (analphipy.potential.generic method)": [[12, "analphipy.potential.Generic.dphidr"]], "dphidr() (analphipy.potential.lennardjones method)": [[12, "analphipy.potential.LennardJones.dphidr"]], "dphidr() (analphipy.potential.lennardjonesnm method)": [[12, "analphipy.potential.LennardJonesNM.dphidr"]], "dphidr_func (analphipy.potential.generic attribute)": [[12, "analphipy.potential.Generic.dphidr_func"]], "eps (analphipy.potential.lennardjones attribute)": [[12, "analphipy.potential.LennardJones.eps"]], "eps (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.eps"]], "eps (analphipy.potential.squarewell attribute)": [[12, "analphipy.potential.SquareWell.eps"]], "eps (analphipy.potential.yukawa attribute)": [[12, "analphipy.potential.Yukawa.eps"]], "factory() (in module analphipy.potential)": [[12, "analphipy.potential.factory"]], "from_phi() (analphipy.potential.cubictable class method)": [[12, "analphipy.potential.CubicTable.from_phi"]], "lam (analphipy.potential.squarewell attribute)": [[12, "analphipy.potential.SquareWell.lam"]], "m (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.m"]], "n (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.n"]], "phi() (analphipy.potential.cubictable method)": [[12, "analphipy.potential.CubicTable.phi"]], "phi() (analphipy.potential.generic method)": [[12, "analphipy.potential.Generic.phi"]], "phi() (analphipy.potential.hardsphere method)": [[12, "analphipy.potential.HardSphere.phi"]], "phi() (analphipy.potential.lennardjones method)": [[12, "analphipy.potential.LennardJones.phi"]], "phi() (analphipy.potential.lennardjonesnm method)": [[12, "analphipy.potential.LennardJonesNM.phi"]], "phi() (analphipy.potential.squarewell method)": [[12, "analphipy.potential.SquareWell.phi"]], "phi() (analphipy.potential.yukawa method)": [[12, "analphipy.potential.Yukawa.phi"]], "phi_func (analphipy.potential.generic attribute)": [[12, "analphipy.potential.Generic.phi_func"]], "phi_left (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.phi_left"]], "phi_min (analphipy.potential.analytic attribute)": [[12, "analphipy.potential.Analytic.phi_min"]], "phi_right (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.phi_right"]], "phi_table (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.phi_table"]], "phidphi() (analphipy.potential.cubictable method)": [[12, "analphipy.potential.CubicTable.phidphi"]], "r_min (analphipy.potential.analytic attribute)": [[12, "analphipy.potential.Analytic.r_min"]], "r_table (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.r_table"]], "rsq_table (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.rsq_table"]], "segments (analphipy.potential.analytic attribute)": [[12, "analphipy.potential.Analytic.segments"]], "sig (analphipy.potential.hardsphere attribute)": [[12, "analphipy.potential.HardSphere.sig"]], "sig (analphipy.potential.lennardjones attribute)": [[12, "analphipy.potential.LennardJones.sig"]], "sig (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.sig"]], "sig (analphipy.potential.squarewell attribute)": [[12, "analphipy.potential.SquareWell.sig"]], "sig (analphipy.potential.yukawa attribute)": [[12, "analphipy.potential.Yukawa.sig"]], "size (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.size"]], "smax (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.smax"]], "smin (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.smin"]], "z (analphipy.potential.yukawa attribute)": [[12, "analphipy.potential.Yukawa.z"]], "analphipy.utils": [[13, "module-analphipy.utils"]], "combine_segmets() (in module analphipy.utils)": [[13, "analphipy.utils.combine_segmets"]], "minimize_phi() (in module analphipy.utils)": [[13, "analphipy.utils.minimize_phi"]], "quad_segments() (in module analphipy.utils)": [[13, "analphipy.utils.quad_segments"]], "segments_to_segments_cut() (in module analphipy.utils)": [[13, "analphipy.utils.segments_to_segments_cut"]]}})