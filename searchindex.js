Search.setIndex({"docnames": ["api", "authors", "contributing", "generated/analphipy.base_potential", "generated/analphipy.measures", "generated/analphipy.norofrenkel", "generated/analphipy.potential", "generated/analphipy.utils", "history", "index", "installation", "license", "notebooks/usage"], "filenames": ["api.md", "authors.md", "contributing.md", "generated/analphipy.base_potential.rst", "generated/analphipy.measures.rst", "generated/analphipy.norofrenkel.rst", "generated/analphipy.potential.rst", "generated/analphipy.utils.rst", "history.md", "index.md", "installation.md", "license.md", "notebooks/usage.ipynb"], "titles": ["API Reference", "Credits", "Contributing", "Base classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.base_potential</span></code>)", "Routines to calculate measures of pair potentials (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.measures</span></code>)", "Noro-Frenkel pair potential analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.norofrenkel</span></code>)", "Classes/routines for pair potentials (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.potential</span></code>)", "Utilities module (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.utils</span></code>)", "History", "<code class=\"docutils literal notranslate\"><span class=\"pre\">analphipy</span></code>", "Installation", "License", "Why <code class=\"docutils literal notranslate\"><span class=\"pre\">analphipy</span></code>"], "terms": {"william": 1, "p": [1, 2, 4, 12], "krekelberg": 1, "mailto": 1, "wpk": [1, 9, 10], "nist": [1, 2, 9, 10, 11], "gov": 1, "none": [1, 3, 4, 5, 6, 7, 12], "yet": 1, "why": [1, 9], "first": [1, 8, 12], "ar": [2, 4, 5, 7, 9, 11, 12], "welcom": 2, "thei": 2, "greatli": 2, "appreci": 2, "everi": 2, "littl": 2, "bit": 2, "help": 2, "credit": [2, 9], "alwai": [2, 7, 10, 12], "given": [2, 12], "you": [2, 10, 12], "can": [2, 4, 10, 12], "mani": 2, "wai": [2, 11], "usnistgov": [2, 10], "analphipi": [2, 10], "issu": 2, "If": [2, 3, 4, 5, 6, 7, 10, 12], "pleas": [2, 9, 12], "includ": [2, 9, 11, 12], "your": [2, 9, 10], "oper": 2, "system": 2, "name": [2, 5, 6, 10], "version": [2, 6, 10], "ani": [2, 11, 12], "detail": 2, "about": 2, "local": 2, "might": 2, "troubleshoot": 2, "step": 2, "reproduc": 2, "look": [2, 12], "through": [2, 10], "github": [2, 10], "anyth": 2, "tag": 2, "want": [2, 9, 12], "i": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12], "open": 2, "whoever": 2, "enhanc": 2, "could": [2, 12], "more": [2, 4, 12], "whether": [2, 11], "part": [2, 5], "offici": 2, "docstr": 2, "even": [2, 6, 7], "web": 2, "blog": 2, "post": 2, "articl": 2, "The": [2, 4, 5, 9, 10, 12], "best": 2, "send": 2, "file": [2, 12], "an": [2, 5, 6, 10, 11, 12], "propos": 2, "explain": 2, "how": 2, "would": 2, "work": [2, 11], "keep": 2, "scope": 2, "narrow": 2, "possibl": 2, "make": 2, "easier": 2, "rememb": 2, "thi": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12], "volunt": 2, "driven": 2, "project": [2, 12], "host": 2, "tool": 2, "hopefulli": 2, "develop": [2, 9, 11], "we": [2, 12], "recommend": 2, "instal": [2, 9], "some": [2, 12], "wide": 2, "For": [2, 3, 4, 5, 6, 7, 12], "either": [2, 6, 10, 11], "pipx": 2, "condax": 2, "mostli": 2, "conda": [2, 9, 10], "choic": 2, "actual": 2, "mamba": [2, 10], "altern": 2, "faster": 2, "solver": 2, "see": [2, 4, 5, 12], "here": [2, 4, 6], "addit": [2, 12], "pre": [2, 5, 9], "commit": 2, "cruft": 2, "merg": 2, "These": 2, "follow": [2, 9, 12], "inject": 2, "readi": 2, "": [2, 4, 5, 6, 12], "set": [2, 3, 6, 12], "up": 2, "fork": 2, "clone": [2, 10], "git": [2, 10], "com": [2, 10], "your_name_her": 2, "creat": [2, 3, 5, 6, 7, 9, 10, 12], "makefil": 2, "dev": 2, "initi": 2, "init": 2, "To": [2, 10, 12], "updat": [2, 7], "recip": 2, "period": 2, "run": [2, 10], "autoupd": 2, "edit": [2, 10], "packag": [2, 9, 12], "pip": [2, 9, 10], "e": [2, 3, 7, 10], "dep": [2, 10], "branch": 2, "checkout": 2, "b": [2, 4, 7, 12], "bugfix": 2, "now": [2, 12], "chang": 2, "flow": 2, "when": 2, "re": 2, "done": [2, 12], "check": 2, "pass": [2, 4, 6, 7, 12], "test": [2, 5], "all": [2, 11], "pytest": 2, "against": 2, "multipl": [2, 5, 7], "python": [2, 9, 10, 12], "push": 2, "add": [2, 10], "m": [2, 5, 6, 9, 12], "descript": 2, "origin": 2, "websit": 2, "need": [2, 12], "place": 2, "few": 2, "locat": [2, 3, 5, 7, 12], "which": [2, 3, 5, 6, 7, 12], "natur": 2, "yaml": [2, 10], "section": [2, 11], "pyproject": 2, "toml": 2, "extra": [2, 3, 4, 5, 6, 7], "note": [2, 4, 6, 7, 12], "total": [2, 4], "exampl": [2, 3, 4], "combin": [2, 4, 7], "produc": 2, "autom": 2, "also": [2, 4, 11], "after": 2, "do": [2, 12], "rebuild": 2, "befor": 2, "meet": 2, "should": [2, 3, 5, 6, 7, 11, 12], "function": [2, 4, 5, 6, 7, 12], "put": 2, "new": [2, 3, 12], "list": [2, 4, 5, 7], "readm": 2, "rst": 2, "3": [2, 5, 12], "8": [2, 12], "9": [2, 12], "10": 2, "isol": 2, "documentaion": 2, "command": [2, 10], "spellcheck": 2, "spell": 2, "reles": 2, "releas": [2, 8, 9], "correct": 2, "distribut": [2, 11], "live": 2, "most": [2, 10, 12], "task": 2, "have": [2, 5, 10, 12], "makefi": 2, "posarg": 2, "messag": 2, "r": [2, 3, 4, 5, 6, 7, 12], "where": [2, 3, 5, 6, 12], "ghp": 2, "import": [2, 9, 12], "call": [2, 3, 5, 12], "page": [2, 9], "ini": 2, "dist": 2, "pypi": [2, 8], "testreleas": 2, "distro": 2, "testpypi": 2, "grayskul": 2, "manual": 2, "ad": [2, 12], "channel": 2, "one": [2, 9], "remot": 2, "py": [2, 12], "38": 2, "39": 2, "310": 2, "phiabstract": [3, 9, 12], "r_min": [3, 5, 6, 9, 12], "phi_min": [3, 5, 6, 9, 12], "segment": [3, 4, 5, 6, 7, 9, 12], "sourc": [3, 4, 5, 6, 7, 9], "object": [3, 4, 5, 6, 7, 12], "abstract": 3, "from": [3, 4, 5, 6, 7, 9, 11, 12], "inherit": 3, "paramet": [3, 4, 5, 6, 7, 9, 12], "float": [3, 4, 5, 6, 7], "option": [3, 4, 5, 6, 7, 10], "posit": [3, 6, 7], "minimum": [3, 5, 6, 7, 12], "valu": [3, 4, 5, 6, 7, 12], "phi": [3, 4, 5, 6, 7, 9, 12], "sequenc": [3, 4, 5, 6, 7], "int": [3, 4, 5, 6, 7], "integr": [3, 4, 5, 6, 7, 12], "limit": [3, 4, 5, 6, 7, 11], "n": [3, 4, 5, 6, 7, 9, 10], "len": [3, 4, 5, 6, 7], "segmetn": [3, 4, 5, 6, 7], "perform": [3, 4, 5, 6, 7, 9, 12], "over": [3, 4, 5, 6, 7, 12], "rang": [3, 4, 5, 6, 7, 12], "0": [3, 4, 5, 6, 7, 9, 12], "1": [3, 4, 5, 6, 7, 9, 12], "2": [3, 4, 5, 6, 7, 12], "attribut": [3, 6], "method": [3, 4, 5, 6, 10, 12], "asdict": [3, 9], "convert": [3, 12], "dictionari": [3, 5, 12], "new_lik": [3, 9], "kw": [3, 4, 5, 6, 7, 12], "pair": [3, 9, 12], "assign": [3, 9], "alia": [3, 5], "potenti": [3, 7, 9], "arrai": [3, 5, 6, 7, 12], "like": [3, 5, 6, 7, 12], "separ": [3, 5, 6], "return": [3, 4, 5, 6, 7, 12], "evalu": [3, 4, 6], "type": [3, 4, 5, 6, 7, 9, 12], "ndarrai": [3, 4, 5, 6], "dphidr": [3, 6, 7, 9, 12], "deriv": [3, 4, 5, 6, 12], "d": [3, 4, 5, 6, 12], "dr": [3, 4, 5, 6, 7, 12], "minim": [3, 7, 9], "r0": [3, 7, 12], "bound": [3, 5, 6, 7, 9, 12], "determin": [3, 5, 12], "guess": [3, 5, 7, 12], "mean": [3, 12], "us": [3, 4, 5, 6, 9, 10, 11], "tupl": [3, 7], "search": [3, 9, 12], "form": [3, 6, 7, 12], "lower_bound": [3, 7], "upper_bound": [3, 7], "argument": [3, 4, 5, 6, 7], "util": [3, 4, 5, 9, 12], "minimize_phi": [3, 5, 7, 9], "rmin": [3, 6, 7], "found": [3, 7, 12], "phimin": [3, 7], "output": [3, 4, 5, 6, 7], "scipi": [3, 4, 5, 7], "optim": [3, 7], "assign_min_numer": [3, 9, 12], "minima": 3, "numer": [3, 5, 12], "to_nf": [3, 9, 12], "norofrenkel": [3, 9, 12], "norofrenkelpair": [3, 5, 9, 12], "constructor": [3, 6], "semgnet": 3, "default": [3, 5, 6, 7], "self": [3, 4, 12], "nf": [3, 12], "to_measur": [3, 9, 12], "measur": [3, 9, 12], "phicutbas": [3, 9], "phi_bas": [3, 9], "rcut": [3, 6, 7, 9, 12], "cut": [3, 6, 7, 9], "phi_": [3, 5], "rm": [3, 5, 12], "begin": [3, 4, 5, 6], "case": [3, 4, 5, 6], "text": 3, "_vcorrect": 3, "r_": 3, "leq": [3, 4, 5, 6], "end": [3, 4, 5, 6], "frac": [3, 4, 5, 6], "_dvdrcorrect": 3, "so": [3, 6, 12], "just": 3, "v": 3, "dvrcut": 3, "lf": [3, 6, 9, 12], "dv": 3, "_dvcorrect": 3, "instanc": [3, 5], "sub": 3, "phicut": [3, 6, 9], "r_cut": 3, "phibas": [3, 4, 5, 6, 9, 12], "philf": [3, 6, 9], "linear": [3, 6, 12], "forc": [3, 5, 6, 12], "shift": [3, 6, 12], "left": [3, 4, 5, 6], "right": [3, 4, 5, 6], "_": 3, "class": [4, 5, 7, 9, 12], "quad_kw": [4, 5], "base": [4, 5, 6, 9, 11], "conveni": [4, 12], "callabl": [4, 5, 6, 7, 12], "map": [4, 5, 12], "quad_seg": [4, 5, 7, 9], "secondviri": [4, 5, 9], "beta": [4, 5, 12], "err": [4, 5, 7], "fals": [4, 5, 6, 7], "full_output": [4, 5, 7], "second": [4, 5, 12], "virial": [4, 5, 12], "coeffici": [4, 5, 12], "invers": [4, 5, 12], "temperatur": [4, 5, 12], "bool": [4, 5, 6, 7], "true": [4, 5, 6, 7], "error": [4, 5, 7, 11, 12], "inform": [4, 7, 12], "b2": [4, 5, 9], "quad": [4, 5, 7], "secondvirial_dbeta": [4, 5, 9], "db2dbeta": 4, "boltz_diverg_j": [4, 9], "other": [4, 12], "beta_oth": 4, "volum": 4, "3d": 4, "jensen": [4, 9], "shannon": [4, 9], "diverg": [4, 9], "boltzmann": [4, 12], "factor": 4, "two": [4, 7, 12], "defin": [4, 5, 6, 9], "exp": [4, 5, 6], "base_potenti": [4, 5, 6, 9, 12], "wrap": 4, "compar": 4, "str": 4, "element": 4, "lambda": [4, 5, 6, 12], "x": [4, 12], "4": [4, 6, 12], "np": [4, 12], "pi": 4, "spheric": [4, 9], "symmetr": [4, 9], "string": [4, 5], "1d": 4, "2d": 4, "assum": 4, "diverg_js_cont": [4, 9], "refer": [4, 5, 9], "info": [4, 12], "http": 4, "en": 4, "wikipedia": 4, "org": 4, "wiki": 4, "kullback": 4, "e2": 4, "80": 4, "93leibler_diverg": 4, "symmetrised_diverg": 4, "mayer_diverg_j": [4, 9], "mayer": 4, "f": [4, 10], "volume_int_func": 4, "b_2": 4, "secondvirial_sw": [4, 5, 9], "sig": [4, 5, 6, 9, 12], "ep": [4, 5, 6, 9, 12], "lam": [4, 5, 6, 9, 12], "squar": [4, 5, 6, 12], "well": [4, 5, 6, 12], "sw": [4, 5, 6], "fluid": [4, 5, 9], "infti": [4, 5, 6], "sigma": [4, 5, 6, 12], "epsilon": [4, 5, 6, 12], "length": [4, 6, 12], "energi": [4, 5, 6, 12], "width": [4, 6], "diverg_kl_cont": [4, 9], "q": 4, "segments_q": 4, "continu": 4, "leibler": 4, "pdf": 4, "probabl": 4, "consid": [4, 11, 12], "suppli": 4, "build": [4, 9], "result": [4, 11, 12], "kb": 4, "leibel": 4, "j": [4, 5, 12], "jeffrei": 4, "A": [5, 9, 11], "collect": 5, "routin": [5, 9], "analyz": 5, "g": [5, 12], "2000": [5, 12], "extend": [5, 9, 12], "correspond": [5, 7, 12], "state": [5, 11, 12], "behavior": [5, 12], "particl": [5, 12], "variabl": [5, 12], "attract": [5, 6, 12], "journal": [5, 12], "chemic": [5, 12], "physic": [5, 12], "113": [5, 12], "2941": [5, 12], "barker": [5, 12], "henderson": [5, 12], "1976": [5, 12], "what": [5, 12], "liquid": [5, 12], "understand": [5, 12], "matter": [5, 12], "review": [5, 12], "modern": [5, 12], "48": [5, 12], "587": [5, 12], "671": [5, 12], "week": [5, 12], "chandler": [5, 12], "h": [5, 6, 12], "c": [5, 9, 10, 12], "andersen": [5, 12], "1971": [5, 12], "role": [5, 12], "repuls": [5, 12], "equilibrium": [5, 12], "structur": [5, 12], "simpl": [5, 9], "54": [5, 12], "5237": [5, 12], "5247": [5, 12], "sig_nf": [5, 9], "phi_rep": [5, 9], "effect": [5, 9, 12], "hard": [5, 6, 12], "sphere": [5, 6, 12], "diamet": [5, 12], "calcul": [5, 6, 9, 12], "formula": 5, "sigma_": 5, "bh": 5, "int_0": 5, "rep": 5, "sum": [5, 7], "sig_nf_dbeta": [5, 9], "respect": 5, "ref": 5, "lam_nf": [5, 9], "match": 5, "convent": 5, "same": [5, 12], "lam_nf_dbeta": [5, 9], "b2_dbeta": [5, 9], "sig_dbeta": [5, 9], "w": 5, "t": [5, 10, 12], "anderson": 5, "decomposit": 5, "distanc": 5, "phi_ref": 5, "classmethod": [5, 6], "from_phi": [5, 6, 9], "find": [5, 7], "from_phi_class": [5, 9], "try": 5, "comput": 5, "equal": 5, "sw_dict": [5, 9], "view": 5, "lam_dbeta": [5, 9], "b2_sw": [5, 9], "tabl": [5, 6, 12], "prop": [5, 12], "key_format": 5, "access": 5, "each": [5, 7], "kei": 5, "format": 5, "dict": 5, "gener": [6, 9, 12], "phi_func": [6, 9, 12], "dphidr_func": [6, 9, 12], "analyt": [6, 9, 12], "specif": [6, 11], "subclass": 6, "lennardjon": [6, 9, 12], "lennard": [6, 12], "jone": [6, 12], "12": [6, 9, 12], "6": [6, 12], "dphi": [6, 7], "particular": [6, 11], "lennardjonesnm": [6, 9], "equival": 6, "yukawa": [6, 9], "z": [6, 9], "core": 6, "interact": 6, "hardspher": [6, 9], "scale": [6, 12], "math": [6, 7], "squarewel": [6, 9], "5": [6, 12], "insid": 6, "specifi": [6, 12], "neg": 6, "cubict": [6, 9], "phi_tabl": [6, 9], "_noth": 6, "noth": 6, "phi_left": [6, 9], "inf": [6, 12], "phi_right": [6, 9], "dphi_left": [6, 9], "dphi_right": [6, 9], "cubic": 6, "interpol": 6, "sqrt": 6, "maximum": 6, "grid": 6, "rmax": 6, "funciton": 6, "space": 6, "properti": [6, 11, 12], "size": [6, 9], "less": 6, "smin": [6, 9], "smax": [6, 9], "phidphi": [6, 9], "rsq_tabl": [6, 9], "r_tabl": [6, 9], "factori": [6, 9], "potential_nam": 6, "construct": 6, "lj": [6, 12], "nm": 6, "yk": 6, "combine_segmet": [7, 9], "sort": 7, "uniqu": 7, "func": 7, "arg": 7, "sum_integr": 7, "sum_error": 7, "quadratur": 7, "discontinu": [7, 12], "otherwis": [7, 11], "across": 7, "segments_to_segments_cut": [7, 9], "phi_to_phi_cut": [7, 9], "meta": 7, "postit": 7, "input": 7, "phi_cut": 7, "dphidr_cut": 7, "phi_to_phi_lf": [7, 9], "metric": [9, 12], "analysi": [9, 12], "main": 9, "classic": 9, "model": 9, "It": [9, 12], "provid": [9, 11, 12], "api": [9, 12], "creation": [9, 12], "sever": [9, 12], "interfac": [9, 12], "user": 9, "noro": [9, 12], "frenkel": [9, 12], "activ": [9, 12], "author": [9, 12], "feel": 9, "free": [9, 11], "pull": 9, "request": 9, "suggest": [9, 12], "stabl": 9, "own": 9, "modul": [9, 12], "licens": 9, "contribut": 9, "report": 9, "bug": 9, "fix": 9, "implement": 9, "write": 9, "document": [9, 11, 12], "submit": 9, "feedback": 9, "get": 9, "environ": [9, 10], "setup": 9, "repo": [9, 10], "depend": [9, 12], "manag": 9, "guidelin": 9, "doc": 9, "tox": 9, "lead": 9, "contributor": 9, "histori": [9, 12], "2021": 9, "09": 9, "index": 9, "termin": 10, "prefer": 10, "recent": [10, 12], "don": [10, 12], "guid": 10, "process": 10, "download": 10, "public": [10, 11], "repositori": 10, "onc": 10, "copi": [10, 11], "dependeci": 10, "code": [10, 11], "block": 10, "consol": 10, "env": 10, "softwar": 11, "wa": [11, 12], "employe": 11, "nation": 11, "institut": 11, "standard": 11, "technologi": 11, "agenc": 11, "feder": 11, "govern": 11, "pursuant": 11, "titl": 11, "17": [11, 12], "unit": [11, 12], "105": 11, "subject": 11, "copyright": 11, "protect": 11, "domain": 11, "permiss": 11, "freeli": 11, "modifi": 11, "its": 11, "without": 11, "fee": 11, "herebi": 11, "grant": 11, "notic": 11, "disclaim": 11, "warranti": 11, "appear": 11, "THE": 11, "AS": 11, "OF": 11, "kind": 11, "express": 11, "impli": 11, "OR": 11, "statutori": 11, "BUT": 11, "NOT": 11, "TO": 11, "THAT": 11, "WILL": 11, "conform": 11, "merchant": 11, "fit": 11, "FOR": 11, "purpos": 11, "AND": 11, "freedom": 11, "infring": 11, "BE": 11, "IN": 11, "NO": 11, "event": 11, "shall": 11, "liabl": 11, "damag": 11, "direct": 11, "indirect": 11, "special": 11, "consequenti": 11, "aris": 11, "out": 11, "connect": 11, "WITH": 11, "upon": 11, "contract": 11, "tort": 11, "injuri": 11, "sustain": 11, "BY": 11, "person": 11, "loss": 11, "aros": 11, "servic": 11, "hereund": 11, "statement": 11, "third": 11, "parti": 11, "legal": 11, "bundl": 11, "complianc": 11, "condit": 11, "those": 11, "common": 12, "featur": 12, "time": 12, "let": 12, "know": 12, "primer": 12, "take": 12, "ha": 12, "typic": 12, "term": 12, "122462048309373": 12, "0x1078fbeb0": 12, "contain": 12, "thing": 12, "matplotlib": 12, "inlin": 12, "pyplot": 12, "plt": 12, "numpi": 12, "linspac": 12, "100": 12, "fig": 12, "ax": 12, "subplot": 12, "set_titl": 12, "plot": 12, "marker": 12, "o": 12, "tight_layout": 12, "question": 12, "interest": 12, "perhap": 12, "simpler": 12, "There": 12, "deep": 12, "In": 12, "brief": 12, "commonli": 12, "design": 12, "depth": 12, "abov": 12, "further": 12, "our": 12, "k_": 12, "constant": 12, "0156054202252172": 12, "line": 12, "line2d": 12, "0x108e2fbe0": 12, "likewis": 12, "0x108ebe770": 12, "sinc": 12, "spectrum": 12, "easili": 12, "panda": 12, "datafram": 12, "9468474615554747": 12, "0072387682627164": 12, "0274539879239069": 12, "0389955732798468": 12, "6162246932413373": 12, "4699861479698415": 12, "3923506242906025": 12, "333901317192492": 12, "pd": 12, "946847": 12, "616225": 12, "007239": 12, "469986": 12, "027454": 12, "392351": 12, "038996": 12, "333901": 12, "rout": 12, "easiest": 12, "def": 12, "my_lj_func": 12, "asarrai": 12, "onli": 12, "partial": 12, "functool": 12, "0x196b3f6d0": 12, "00000000e": 12, "00": 12, "55111512e": 12, "46944695e": 12, "18": 12, "requir": 12, "explicitli": 12, "desir": 12, "my_lj_deriv_func": 12, "infint": 12, "22044605e": 12, "16": 12, "investig": 12, "must": 12, "latter": 12, "directli": 12, "dure": 12, "rais": 12, "becaus": 12, "valueerror": 12, "traceback": 12, "last": 12, "cell": 12, "15": 12, "src": 12, "286": 12, "271": 12, "272": 12, "273": 12, "283": 12, "284": 12, "285": 12, "288": 12, "k": 12, "289": 12, "instead": 12, "g_with_min": 12, "3815918477142934": 12, "3815918477142932": 12, "p_cut": 12, "016316891136000003": 12, "0x196cc8370": 12, "p_lf": 12, "03899948": 12, "03899947745280001": 12}, "objects": {"analphipy": [[3, 0, 0, "-", "base_potential"], [4, 0, 0, "-", "measures"], [5, 0, 0, "-", "norofrenkel"], [6, 0, 0, "-", "potential"], [7, 0, 0, "-", "utils"]], "analphipy.base_potential": [[3, 1, 1, "", "PhiAbstract"], [3, 1, 1, "", "PhiBase"], [3, 1, 1, "", "PhiCut"], [3, 1, 1, "", "PhiCutBase"], [3, 1, 1, "", "PhiLFS"]], "analphipy.base_potential.PhiAbstract": [[3, 2, 1, "", "asdict"], [3, 2, 1, "", "assign"], [3, 2, 1, "", "assign_min_numeric"], [3, 2, 1, "", "dphidr"], [3, 2, 1, "", "minimize"], [3, 2, 1, "", "new_like"], [3, 2, 1, "", "phi"], [3, 3, 1, "", "phi_min"], [3, 3, 1, "", "r_min"], [3, 3, 1, "", "segments"], [3, 2, 1, "", "to_measures"], [3, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiBase": [[3, 2, 1, "", "asdict"], [3, 2, 1, "", "assign"], [3, 2, 1, "", "assign_min_numeric"], [3, 2, 1, "", "cut"], [3, 2, 1, "", "dphidr"], [3, 2, 1, "", "lfs"], [3, 2, 1, "", "minimize"], [3, 2, 1, "", "new_like"], [3, 2, 1, "", "phi"], [3, 3, 1, "", "phi_min"], [3, 3, 1, "", "r_min"], [3, 3, 1, "", "segments"], [3, 2, 1, "", "to_measures"], [3, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiCut": [[3, 2, 1, "", "asdict"], [3, 2, 1, "", "assign"], [3, 2, 1, "", "assign_min_numeric"], [3, 2, 1, "", "dphidr"], [3, 2, 1, "", "minimize"], [3, 2, 1, "", "new_like"], [3, 2, 1, "", "phi"], [3, 3, 1, "", "phi_base"], [3, 3, 1, "", "phi_min"], [3, 3, 1, "", "r_min"], [3, 3, 1, "", "rcut"], [3, 3, 1, "", "segments"], [3, 2, 1, "", "to_measures"], [3, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiCutBase": [[3, 2, 1, "", "asdict"], [3, 2, 1, "", "assign"], [3, 2, 1, "", "assign_min_numeric"], [3, 2, 1, "", "dphidr"], [3, 2, 1, "", "minimize"], [3, 2, 1, "", "new_like"], [3, 2, 1, "", "phi"], [3, 3, 1, "", "phi_base"], [3, 3, 1, "", "phi_min"], [3, 3, 1, "", "r_min"], [3, 3, 1, "", "rcut"], [3, 3, 1, "", "segments"], [3, 2, 1, "", "to_measures"], [3, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiLFS": [[3, 2, 1, "", "asdict"], [3, 2, 1, "", "assign"], [3, 2, 1, "", "assign_min_numeric"], [3, 2, 1, "", "dphidr"], [3, 2, 1, "", "minimize"], [3, 2, 1, "", "new_like"], [3, 2, 1, "", "phi"], [3, 3, 1, "", "phi_base"], [3, 3, 1, "", "phi_min"], [3, 3, 1, "", "r_min"], [3, 3, 1, "", "rcut"], [3, 3, 1, "", "segments"], [3, 2, 1, "", "to_measures"], [3, 2, 1, "", "to_nf"]], "analphipy.measures": [[4, 1, 1, "", "Measures"], [4, 4, 1, "", "diverg_js_cont"], [4, 4, 1, "", "diverg_kl_cont"], [4, 4, 1, "", "secondvirial"], [4, 4, 1, "", "secondvirial_dbeta"], [4, 4, 1, "", "secondvirial_sw"]], "analphipy.measures.Measures": [[4, 2, 1, "", "boltz_diverg_js"], [4, 2, 1, "", "mayer_diverg_js"], [4, 2, 1, "", "secondvirial"], [4, 2, 1, "", "secondvirial_dbeta"]], "analphipy.norofrenkel": [[5, 1, 1, "", "NoroFrenkelPair"], [5, 4, 1, "", "lam_nf"], [5, 4, 1, "", "lam_nf_dbeta"], [5, 4, 1, "", "sig_nf"], [5, 4, 1, "", "sig_nf_dbeta"]], "analphipy.norofrenkel.NoroFrenkelPair": [[5, 2, 1, "", "B2"], [5, 2, 1, "", "B2_dbeta"], [5, 2, 1, "", "B2_sw"], [5, 2, 1, "", "eps"], [5, 2, 1, "", "from_phi"], [5, 2, 1, "", "from_phi_class"], [5, 2, 1, "", "lam"], [5, 2, 1, "", "lam_dbeta"], [5, 2, 1, "", "phi_rep"], [5, 2, 1, "", "secondvirial"], [5, 2, 1, "", "secondvirial_dbeta"], [5, 2, 1, "", "secondvirial_sw"], [5, 2, 1, "", "sig"], [5, 2, 1, "", "sig_dbeta"], [5, 2, 1, "", "sw_dict"], [5, 2, 1, "", "table"]], "analphipy.potential": [[6, 1, 1, "", "Analytic"], [6, 1, 1, "", "CubicTable"], [6, 1, 1, "", "Generic"], [6, 1, 1, "", "HardSphere"], [6, 1, 1, "", "LennardJones"], [6, 1, 1, "", "LennardJonesNM"], [6, 1, 1, "", "SquareWell"], [6, 1, 1, "", "Yukawa"], [6, 4, 1, "", "factory"]], "analphipy.potential.Analytic": [[6, 3, 1, "", "phi_min"], [6, 3, 1, "", "r_min"], [6, 3, 1, "", "segments"]], "analphipy.potential.CubicTable": [[6, 3, 1, "", "bounds"], [6, 3, 1, "", "dphi_left"], [6, 3, 1, "", "dphi_right"], [6, 2, 1, "", "dphidr"], [6, 2, 1, "", "from_phi"], [6, 2, 1, "", "phi"], [6, 3, 1, "", "phi_left"], [6, 3, 1, "", "phi_right"], [6, 3, 1, "", "phi_table"], [6, 2, 1, "", "phidphi"], [6, 5, 1, "", "r_table"], [6, 5, 1, "", "rsq_table"], [6, 5, 1, "", "size"], [6, 5, 1, "", "smax"], [6, 5, 1, "", "smin"]], "analphipy.potential.Generic": [[6, 2, 1, "", "dphidr"], [6, 3, 1, "", "dphidr_func"], [6, 2, 1, "", "phi"], [6, 3, 1, "", "phi_func"]], "analphipy.potential.HardSphere": [[6, 2, 1, "", "phi"], [6, 3, 1, "", "sig"]], "analphipy.potential.LennardJones": [[6, 2, 1, "", "dphidr"], [6, 3, 1, "", "eps"], [6, 2, 1, "", "phi"], [6, 3, 1, "", "sig"]], "analphipy.potential.LennardJonesNM": [[6, 2, 1, "", "dphidr"], [6, 3, 1, "", "eps"], [6, 3, 1, "", "m"], [6, 3, 1, "", "n"], [6, 2, 1, "", "phi"], [6, 3, 1, "", "sig"]], "analphipy.potential.SquareWell": [[6, 3, 1, "", "eps"], [6, 3, 1, "", "lam"], [6, 2, 1, "", "phi"], [6, 3, 1, "", "sig"]], "analphipy.potential.Yukawa": [[6, 3, 1, "", "eps"], [6, 2, 1, "", "phi"], [6, 3, 1, "", "sig"], [6, 3, 1, "", "z"]], "analphipy.utils": [[7, 4, 1, "", "combine_segmets"], [7, 4, 1, "", "minimize_phi"], [7, 4, 1, "", "phi_to_phi_cut"], [7, 4, 1, "", "phi_to_phi_lfs"], [7, 4, 1, "", "quad_segments"], [7, 4, 1, "", "segments_to_segments_cut"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": [0, 12], "credit": 1, "develop": 1, "lead": 1, "contributor": 1, "contribut": 2, "type": 2, "report": 2, "bug": 2, "fix": 2, "implement": 2, "featur": [2, 9], "write": 2, "document": 2, "submit": 2, "feedback": 2, "get": 2, "start": [2, 9], "environ": 2, "setup": 2, "repo": 2, "depend": 2, "manag": 2, "pull": 2, "request": 2, "guidelin": 2, "build": 2, "doc": 2, "us": [2, 12], "tox": 2, "base": 3, "class": [3, 6], "analphipi": [3, 4, 5, 6, 7, 9, 12], "base_potenti": 3, "routin": [4, 6], "calcul": 4, "measur": 4, "pair": [4, 5, 6], "potenti": [4, 5, 6, 12], "noro": 5, "frenkel": 5, "analysi": 5, "norofrenkel": 5, "util": 7, "modul": 7, "histori": 8, "0": 8, "1": 8, "2021": 8, "12": 8, "09": 8, "overview": 9, "statu": 9, "quick": 9, "exampl": [9, 12], "usag": 9, "content": 9, "indic": 9, "tabl": 9, "instal": 10, "stabl": 10, "releas": 10, "from": 10, "sourc": 10, "licens": 11, "why": 12, "A": 12, "simpl": 12, "defin": 12, "your": 12, "own": 12, "cut": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Credits": [[1, "credits"]], "Development Lead": [[1, "development-lead"]], "Contributors": [[1, "contributors"]], "Contributing": [[2, "contributing"]], "Types of Contributions": [[2, "types-of-contributions"]], "Report Bugs": [[2, "report-bugs"]], "Fix Bugs": [[2, "fix-bugs"]], "Implement Features": [[2, "implement-features"]], "Write Documentation": [[2, "write-documentation"]], "Submit Feedback": [[2, "submit-feedback"]], "Get Started!": [[2, "get-started"]], "Environment setup": [[2, "environment-setup"]], "Getting the repo": [[2, "getting-the-repo"]], "Dependency managment": [[2, "dependency-managment"]], "Pull Request Guidelines": [[2, "pull-request-guidelines"]], "Building the docs": [[2, "building-the-docs"]], "Using tox": [[2, "using-tox"]], "Base classes (analphipy.base_potential)": [[3, "base-classes-analphipy-base-potential"]], "Routines to calculate measures of pair potentials (analphipy.measures)": [[4, "routines-to-calculate-measures-of-pair-potentials-analphipy-measures"]], "Noro-Frenkel pair potential analysis (analphipy.norofrenkel)": [[5, "noro-frenkel-pair-potential-analysis-analphipy-norofrenkel"]], "Classes/routines for pair potentials (analphipy.potential)": [[6, "classes-routines-for-pair-potentials-analphipy-potential"]], "Utilities module (analphipy.utils)": [[7, "utilities-module-analphipy-utils"]], "History": [[8, "history"]], "0.0.1 (2021-12-09)": [[8, "id1"]], "analphipy": [[9, "analphipy"]], "Overview": [[9, "overview"]], "Features": [[9, "features"]], "Status": [[9, "status"]], "Quick start": [[9, "quick-start"]], "Example usage": [[9, "example-usage"]], "Contents:": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]], "Installation": [[10, "installation"]], "Stable release": [[10, "stable-release"]], "From sources": [[10, "from-sources"]], "License": [[11, "license"]], "Why analphipy": [[12, "why-analphipy"]], "Useful references": [[12, "useful-references"]], "A simple example": [[12, "a-simple-example"]], "Defining your own potential": [[12, "defining-your-own-potential"]], "Cut potential": [[12, "cut-potential"]]}, "indexentries": {"phiabstract (class in analphipy.base_potential)": [[3, "analphipy.base_potential.PhiAbstract"]], "phibase (class in analphipy.base_potential)": [[3, "analphipy.base_potential.PhiBase"]], "phicut (class in analphipy.base_potential)": [[3, "analphipy.base_potential.PhiCut"]], "phicutbase (class in analphipy.base_potential)": [[3, "analphipy.base_potential.PhiCutBase"]], "philfs (class in analphipy.base_potential)": [[3, "analphipy.base_potential.PhiLFS"]], "analphipy.base_potential": [[3, "module-analphipy.base_potential"]], "asdict() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.asdict"]], "asdict() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.asdict"]], "asdict() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.asdict"]], "asdict() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.asdict"]], "asdict() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.asdict"]], "assign() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.assign"]], "assign() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.assign"]], "assign() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.assign"]], "assign() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.assign"]], "assign() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.assign"]], "assign_min_numeric() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.assign_min_numeric"]], "assign_min_numeric() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.assign_min_numeric"]], "cut() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.cut"]], "dphidr() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.dphidr"]], "dphidr() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.dphidr"]], "dphidr() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.dphidr"]], "dphidr() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.dphidr"]], "dphidr() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.dphidr"]], "lfs() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.lfs"]], "minimize() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.minimize"]], "minimize() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.minimize"]], "minimize() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.minimize"]], "minimize() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.minimize"]], "minimize() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.minimize"]], "module": [[3, "module-analphipy.base_potential"], [4, "module-analphipy.measures"], [5, "module-analphipy.norofrenkel"], [6, "module-analphipy.potential"], [7, "module-analphipy.utils"]], "new_like() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.new_like"]], "new_like() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.new_like"]], "new_like() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.new_like"]], "new_like() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.new_like"]], "new_like() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.new_like"]], "phi() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.phi"]], "phi() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.phi"]], "phi() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.phi"]], "phi() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.phi"]], "phi() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.phi"]], "phi_base (analphipy.base_potential.phicut attribute)": [[3, "analphipy.base_potential.PhiCut.phi_base"]], "phi_base (analphipy.base_potential.phicutbase attribute)": [[3, "analphipy.base_potential.PhiCutBase.phi_base"]], "phi_base (analphipy.base_potential.philfs attribute)": [[3, "analphipy.base_potential.PhiLFS.phi_base"]], "phi_min (analphipy.base_potential.phiabstract attribute)": [[3, "analphipy.base_potential.PhiAbstract.phi_min"]], "phi_min (analphipy.base_potential.phibase attribute)": [[3, "analphipy.base_potential.PhiBase.phi_min"]], "phi_min (analphipy.base_potential.phicut attribute)": [[3, "analphipy.base_potential.PhiCut.phi_min"]], "phi_min (analphipy.base_potential.phicutbase attribute)": [[3, "analphipy.base_potential.PhiCutBase.phi_min"]], "phi_min (analphipy.base_potential.philfs attribute)": [[3, "analphipy.base_potential.PhiLFS.phi_min"]], "r_min (analphipy.base_potential.phiabstract attribute)": [[3, "analphipy.base_potential.PhiAbstract.r_min"]], "r_min (analphipy.base_potential.phibase attribute)": [[3, "analphipy.base_potential.PhiBase.r_min"]], "r_min (analphipy.base_potential.phicut attribute)": [[3, "analphipy.base_potential.PhiCut.r_min"]], "r_min (analphipy.base_potential.phicutbase attribute)": [[3, "analphipy.base_potential.PhiCutBase.r_min"]], "r_min (analphipy.base_potential.philfs attribute)": [[3, "analphipy.base_potential.PhiLFS.r_min"]], "rcut (analphipy.base_potential.phicut attribute)": [[3, "analphipy.base_potential.PhiCut.rcut"]], "rcut (analphipy.base_potential.phicutbase attribute)": [[3, "analphipy.base_potential.PhiCutBase.rcut"]], "rcut (analphipy.base_potential.philfs attribute)": [[3, "analphipy.base_potential.PhiLFS.rcut"]], "segments (analphipy.base_potential.phiabstract attribute)": [[3, "analphipy.base_potential.PhiAbstract.segments"]], "segments (analphipy.base_potential.phibase attribute)": [[3, "analphipy.base_potential.PhiBase.segments"]], "segments (analphipy.base_potential.phicut attribute)": [[3, "analphipy.base_potential.PhiCut.segments"]], "segments (analphipy.base_potential.phicutbase attribute)": [[3, "analphipy.base_potential.PhiCutBase.segments"]], "segments (analphipy.base_potential.philfs attribute)": [[3, "analphipy.base_potential.PhiLFS.segments"]], "to_measures() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.to_measures"]], "to_measures() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.to_measures"]], "to_measures() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.to_measures"]], "to_measures() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.to_measures"]], "to_measures() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.to_measures"]], "to_nf() (analphipy.base_potential.phiabstract method)": [[3, "analphipy.base_potential.PhiAbstract.to_nf"]], "to_nf() (analphipy.base_potential.phibase method)": [[3, "analphipy.base_potential.PhiBase.to_nf"]], "to_nf() (analphipy.base_potential.phicut method)": [[3, "analphipy.base_potential.PhiCut.to_nf"]], "to_nf() (analphipy.base_potential.phicutbase method)": [[3, "analphipy.base_potential.PhiCutBase.to_nf"]], "to_nf() (analphipy.base_potential.philfs method)": [[3, "analphipy.base_potential.PhiLFS.to_nf"]], "measures (class in analphipy.measures)": [[4, "analphipy.measures.Measures"]], "analphipy.measures": [[4, "module-analphipy.measures"]], "boltz_diverg_js() (analphipy.measures.measures method)": [[4, "analphipy.measures.Measures.boltz_diverg_js"]], "diverg_js_cont() (in module analphipy.measures)": [[4, "analphipy.measures.diverg_js_cont"]], "diverg_kl_cont() (in module analphipy.measures)": [[4, "analphipy.measures.diverg_kl_cont"]], "mayer_diverg_js() (analphipy.measures.measures method)": [[4, "analphipy.measures.Measures.mayer_diverg_js"]], "secondvirial() (analphipy.measures.measures method)": [[4, "analphipy.measures.Measures.secondvirial"]], "secondvirial() (in module analphipy.measures)": [[4, "analphipy.measures.secondvirial"]], "secondvirial_dbeta() (analphipy.measures.measures method)": [[4, "analphipy.measures.Measures.secondvirial_dbeta"]], "secondvirial_dbeta() (in module analphipy.measures)": [[4, "analphipy.measures.secondvirial_dbeta"]], "secondvirial_sw() (in module analphipy.measures)": [[4, "analphipy.measures.secondvirial_sw"]], "b2() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.B2"]], "b2_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.B2_dbeta"]], "b2_sw() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.B2_sw"]], "norofrenkelpair (class in analphipy.norofrenkel)": [[5, "analphipy.norofrenkel.NoroFrenkelPair"]], "analphipy.norofrenkel": [[5, "module-analphipy.norofrenkel"]], "eps() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.eps"]], "from_phi() (analphipy.norofrenkel.norofrenkelpair class method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.from_phi"]], "from_phi_class() (analphipy.norofrenkel.norofrenkelpair class method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.from_phi_class"]], "lam() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.lam"]], "lam_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.lam_dbeta"]], "lam_nf() (in module analphipy.norofrenkel)": [[5, "analphipy.norofrenkel.lam_nf"]], "lam_nf_dbeta() (in module analphipy.norofrenkel)": [[5, "analphipy.norofrenkel.lam_nf_dbeta"]], "phi_rep() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.phi_rep"]], "secondvirial() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial"]], "secondvirial_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial_dbeta"]], "secondvirial_sw() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial_sw"]], "sig() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.sig"]], "sig_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.sig_dbeta"]], "sig_nf() (in module analphipy.norofrenkel)": [[5, "analphipy.norofrenkel.sig_nf"]], "sig_nf_dbeta() (in module analphipy.norofrenkel)": [[5, "analphipy.norofrenkel.sig_nf_dbeta"]], "sw_dict() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.sw_dict"]], "table() (analphipy.norofrenkel.norofrenkelpair method)": [[5, "analphipy.norofrenkel.NoroFrenkelPair.table"]], "analytic (class in analphipy.potential)": [[6, "analphipy.potential.Analytic"]], "cubictable (class in analphipy.potential)": [[6, "analphipy.potential.CubicTable"]], "generic (class in analphipy.potential)": [[6, "analphipy.potential.Generic"]], "hardsphere (class in analphipy.potential)": [[6, "analphipy.potential.HardSphere"]], "lennardjones (class in analphipy.potential)": [[6, "analphipy.potential.LennardJones"]], "lennardjonesnm (class in analphipy.potential)": [[6, "analphipy.potential.LennardJonesNM"]], "squarewell (class in analphipy.potential)": [[6, "analphipy.potential.SquareWell"]], "yukawa (class in analphipy.potential)": [[6, "analphipy.potential.Yukawa"]], "analphipy.potential": [[6, "module-analphipy.potential"]], "bounds (analphipy.potential.cubictable attribute)": [[6, "analphipy.potential.CubicTable.bounds"]], "dphi_left (analphipy.potential.cubictable attribute)": [[6, "analphipy.potential.CubicTable.dphi_left"]], "dphi_right (analphipy.potential.cubictable attribute)": [[6, "analphipy.potential.CubicTable.dphi_right"]], "dphidr() (analphipy.potential.cubictable method)": [[6, "analphipy.potential.CubicTable.dphidr"]], "dphidr() (analphipy.potential.generic method)": [[6, "analphipy.potential.Generic.dphidr"]], "dphidr() (analphipy.potential.lennardjones method)": [[6, "analphipy.potential.LennardJones.dphidr"]], "dphidr() (analphipy.potential.lennardjonesnm method)": [[6, "analphipy.potential.LennardJonesNM.dphidr"]], "dphidr_func (analphipy.potential.generic attribute)": [[6, "analphipy.potential.Generic.dphidr_func"]], "eps (analphipy.potential.lennardjones attribute)": [[6, "analphipy.potential.LennardJones.eps"]], "eps (analphipy.potential.lennardjonesnm attribute)": [[6, "analphipy.potential.LennardJonesNM.eps"]], "eps (analphipy.potential.squarewell attribute)": [[6, "analphipy.potential.SquareWell.eps"]], "eps (analphipy.potential.yukawa attribute)": [[6, "analphipy.potential.Yukawa.eps"]], "factory() (in module analphipy.potential)": [[6, "analphipy.potential.factory"]], "from_phi() (analphipy.potential.cubictable class method)": [[6, "analphipy.potential.CubicTable.from_phi"]], "lam (analphipy.potential.squarewell attribute)": [[6, "analphipy.potential.SquareWell.lam"]], "m (analphipy.potential.lennardjonesnm attribute)": [[6, "analphipy.potential.LennardJonesNM.m"]], "n (analphipy.potential.lennardjonesnm attribute)": [[6, "analphipy.potential.LennardJonesNM.n"]], "phi() (analphipy.potential.cubictable method)": [[6, "analphipy.potential.CubicTable.phi"]], "phi() (analphipy.potential.generic method)": [[6, "analphipy.potential.Generic.phi"]], "phi() (analphipy.potential.hardsphere method)": [[6, "analphipy.potential.HardSphere.phi"]], "phi() (analphipy.potential.lennardjones method)": [[6, "analphipy.potential.LennardJones.phi"]], "phi() (analphipy.potential.lennardjonesnm method)": [[6, "analphipy.potential.LennardJonesNM.phi"]], "phi() (analphipy.potential.squarewell method)": [[6, "analphipy.potential.SquareWell.phi"]], "phi() (analphipy.potential.yukawa method)": [[6, "analphipy.potential.Yukawa.phi"]], "phi_func (analphipy.potential.generic attribute)": [[6, "analphipy.potential.Generic.phi_func"]], "phi_left (analphipy.potential.cubictable attribute)": [[6, "analphipy.potential.CubicTable.phi_left"]], "phi_min (analphipy.potential.analytic attribute)": [[6, "analphipy.potential.Analytic.phi_min"]], "phi_right (analphipy.potential.cubictable attribute)": [[6, "analphipy.potential.CubicTable.phi_right"]], "phi_table (analphipy.potential.cubictable attribute)": [[6, "analphipy.potential.CubicTable.phi_table"]], "phidphi() (analphipy.potential.cubictable method)": [[6, "analphipy.potential.CubicTable.phidphi"]], "r_min (analphipy.potential.analytic attribute)": [[6, "analphipy.potential.Analytic.r_min"]], "r_table (analphipy.potential.cubictable property)": [[6, "analphipy.potential.CubicTable.r_table"]], "rsq_table (analphipy.potential.cubictable property)": [[6, "analphipy.potential.CubicTable.rsq_table"]], "segments (analphipy.potential.analytic attribute)": [[6, "analphipy.potential.Analytic.segments"]], "sig (analphipy.potential.hardsphere attribute)": [[6, "analphipy.potential.HardSphere.sig"]], "sig (analphipy.potential.lennardjones attribute)": [[6, "analphipy.potential.LennardJones.sig"]], "sig (analphipy.potential.lennardjonesnm attribute)": [[6, "analphipy.potential.LennardJonesNM.sig"]], "sig (analphipy.potential.squarewell attribute)": [[6, "analphipy.potential.SquareWell.sig"]], "sig (analphipy.potential.yukawa attribute)": [[6, "analphipy.potential.Yukawa.sig"]], "size (analphipy.potential.cubictable property)": [[6, "analphipy.potential.CubicTable.size"]], "smax (analphipy.potential.cubictable property)": [[6, "analphipy.potential.CubicTable.smax"]], "smin (analphipy.potential.cubictable property)": [[6, "analphipy.potential.CubicTable.smin"]], "z (analphipy.potential.yukawa attribute)": [[6, "analphipy.potential.Yukawa.z"]], "analphipy.utils": [[7, "module-analphipy.utils"]], "combine_segmets() (in module analphipy.utils)": [[7, "analphipy.utils.combine_segmets"]], "minimize_phi() (in module analphipy.utils)": [[7, "analphipy.utils.minimize_phi"]], "phi_to_phi_cut() (in module analphipy.utils)": [[7, "analphipy.utils.phi_to_phi_cut"]], "phi_to_phi_lfs() (in module analphipy.utils)": [[7, "analphipy.utils.phi_to_phi_lfs"]], "quad_segments() (in module analphipy.utils)": [[7, "analphipy.utils.quad_segments"]], "segments_to_segments_cut() (in module analphipy.utils)": [[7, "analphipy.utils.segments_to_segments_cut"]]}})