Search.setIndex({"alltitles": {"A simple example": [[4, "a-simple-example"]], "API Reference": [[14, null]], "Added": [[1, "added"], [1, "id1"]], "Base classes (analphipy.base_potential)": [[9, null]], "Building distribution for conda": [[2, "building-distribution-for-conda"]], "Building distribution for pypi": [[2, "building-distribution-for-pypi"]], "Building the docs": [[2, "building-the-docs"]], "Changed": [[1, "changed"], [1, "id2"]], "Changelog": [[1, null]], "Classes/routines for pair potentials (analphipy.potential)": [[12, null]], "Contributing": [[2, null]], "Contributors": [[0, "contributors"]], "Create development environment with conda": [[2, "create-development-environment-with-conda"]], "Create development environment with uv/pip": [[2, "create-development-environment-with-uv-pip"]], "Creating environment.yaml/requirement.txt files": [[2, "creating-environment-yaml-requirement-txt-files"]], "Credits": [[0, null]], "Cut potential": [[4, "cut-potential"]], "Defining your own potential": [[4, "defining-your-own-potential"]], "Development Lead": [[0, "development-lead"]], "Development tools": [[2, "development-tools"]], "Example usage": [[5, "example-usage"]], "Features": [[5, "features"]], "Fix Bugs": [[2, "fix-bugs"]], "From sources": [[6, "from-sources"]], "Implement Features": [[2, "implement-features"]], "Indices and tables": [[8, null]], "Installation": [[6, null]], "Installing interpreters for virtualenv creation": [[2, "installing-interpreters-for-virtualenv-creation"]], "License": [[7, null]], "Making a contribution": [[2, "making-a-contribution"]], "Noro-Frenkel pair potential analysis (analphipy.norofrenkel)": [[11, null]], "Nox session options": [[2, "nox-session-options"]], "Overview": [[5, "overview"]], "Package version": [[2, "package-version"]], "Pull Request Guidelines": [[2, "pull-request-guidelines"]], "Quick start": [[5, "quick-start"]], "Removed": [[1, "removed"]], "Report Bugs": [[2, "report-bugs"]], "Routines to calculate measures of pair potentials (analphipy.measures)": [[10, null]], "Setup development environment": [[2, "setup-development-environment"]], "Stable release": [[6, "stable-release"]], "Status": [[5, "status"]], "Submit Feedback": [[2, "submit-feedback"]], "Testing notebooks with nbval": [[2, "testing-notebooks-with-nbval"]], "Testing pypi or conda installs": [[2, "testing-pypi-or-conda-installs"]], "Testing with nox": [[2, "testing-with-nox"]], "Type checking": [[2, "type-checking"]], "Types of Contributions": [[2, "types-of-contributions"]], "Unreleased": [[1, "unreleased"]], "Useful references": [[4, "useful-references"]], "User guide": [[3, null]], "Using nox": [[2, "using-nox"]], "Using pre-commit": [[2, "using-pre-commit"]], "Utilities module (analphipy.utils)": [[13, null]], "Why analphipy": [[4, null]], "Write Documentation": [[2, "write-documentation"]], "analphipy": [[5, null]], "ipykernel": [[2, "ipykernel"]], "v0.0.1 - 2022-09-26": [[1, "v0-0-1-2022-09-26"]], "v0.0.2 - 2022-09-26": [[1, "v0-0-2-2022-09-26"]], "v0.0.3 - 2022-09-26": [[1, "v0-0-3-2022-09-26"]], "v0.0.4 - 2022-09-27": [[1, "v0-0-4-2022-09-27"]], "v0.0.5 - 2023-03-22": [[1, "v0-0-5-2023-03-22"]], "v0.0.6 - 2023-03-22": [[1, "v0-0-6-2023-03-22"]], "v0.1.0 \u2014 2023-04-24": [[1, "v0-1-0-2023-04-24"]], "v0.2.0 \u2014 2023-05-04": [[1, "v0-2-0-2023-05-04"]], "v0.3.0 \u2014 2023-08-04": [[1, "v0-3-0-2023-08-04"]]}, "docnames": ["authors", "changelog", "contributing", "examples/index", "examples/usage/usage", "index", "installation", "license", "navigation", "reference/generated/analphipy.base_potential", "reference/generated/analphipy.measures", "reference/generated/analphipy.norofrenkel", "reference/generated/analphipy.potential", "reference/generated/analphipy.utils", "reference/index"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["authors.md", "changelog.md", "contributing.md", "examples/index.md", "examples/usage/usage.ipynb", "index.md", "installation.md", "license.md", "navigation.md", "reference/generated/analphipy.base_potential.rst", "reference/generated/analphipy.measures.rst", "reference/generated/analphipy.norofrenkel.rst", "reference/generated/analphipy.potential.rst", "reference/generated/analphipy.utils.rst", "reference/index.rst"], "indexentries": {"add_quad_kws() (in module analphipy.utils)": [[13, "analphipy.utils.add_quad_kws", false]], "analphipy.base_potential": [[9, "module-analphipy.base_potential", false]], "analphipy.measures": [[10, "module-analphipy.measures", false]], "analphipy.norofrenkel": [[11, "module-analphipy.norofrenkel", false]], "analphipy.potential": [[12, "module-analphipy.potential", false]], "analphipy.utils": [[13, "module-analphipy.utils", false]], "analytic (class in analphipy.potential)": [[12, "analphipy.potential.Analytic", false]], "asdict() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.asdict", false]], "asdict() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.asdict", false]], "asdict() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.asdict", false]], "asdict() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.asdict", false]], "asdict() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.asdict", false]], "assign() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.assign", false]], "assign() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.assign", false]], "assign() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.assign", false]], "assign() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.assign", false]], "assign() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.assign", false]], "assign_min_numeric() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.assign_min_numeric", false]], "assign_min_numeric() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.assign_min_numeric", false]], "assign_min_numeric() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.assign_min_numeric", false]], "assign_min_numeric() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.assign_min_numeric", false]], "assign_min_numeric() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.assign_min_numeric", false]], "b2() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.B2", false]], "b2_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.B2_dbeta", false]], "b2_sw() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.B2_sw", false]], "boltz_diverg_js() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.boltz_diverg_js", false]], "bounds (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.bounds", false]], "combine_segmets() (in module analphipy.utils)": [[13, "analphipy.utils.combine_segmets", false]], "cubictable (class in analphipy.potential)": [[12, "analphipy.potential.CubicTable", false]], "cut() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.cut", false]], "diverg_js_cont() (in module analphipy.measures)": [[10, "analphipy.measures.diverg_js_cont", false]], "diverg_kl_cont() (in module analphipy.measures)": [[10, "analphipy.measures.diverg_kl_cont", false]], "dphi_left (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.dphi_left", false]], "dphi_right (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.dphi_right", false]], "dphidr() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.dphidr", false]], "dphidr() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.dphidr", false]], "dphidr() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.dphidr", false]], "dphidr() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.dphidr", false]], "dphidr() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.dphidr", false]], "dphidr() (analphipy.potential.cubictable method)": [[12, "analphipy.potential.CubicTable.dphidr", false]], "dphidr() (analphipy.potential.generic method)": [[12, "analphipy.potential.Generic.dphidr", false]], "dphidr() (analphipy.potential.lennardjones method)": [[12, "analphipy.potential.LennardJones.dphidr", false]], "dphidr() (analphipy.potential.lennardjonesnm method)": [[12, "analphipy.potential.LennardJonesNM.dphidr", false]], "dphidr_func (analphipy.potential.generic attribute)": [[12, "analphipy.potential.Generic.dphidr_func", false]], "eps (analphipy.potential.lennardjones attribute)": [[12, "analphipy.potential.LennardJones.eps", false]], "eps (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.eps", false]], "eps (analphipy.potential.squarewell attribute)": [[12, "analphipy.potential.SquareWell.eps", false]], "eps (analphipy.potential.yukawa attribute)": [[12, "analphipy.potential.Yukawa.eps", false]], "eps() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.eps", false]], "factory() (in module analphipy.potential)": [[12, "analphipy.potential.factory", false]], "from_phi() (analphipy.norofrenkel.norofrenkelpair class method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.from_phi", false]], "from_phi() (analphipy.potential.cubictable class method)": [[12, "analphipy.potential.CubicTable.from_phi", false]], "from_phi_class() (analphipy.norofrenkel.norofrenkelpair class method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.from_phi_class", false]], "generic (class in analphipy.potential)": [[12, "analphipy.potential.Generic", false]], "hardsphere (class in analphipy.potential)": [[12, "analphipy.potential.HardSphere", false]], "is_float() (in module analphipy.utils)": [[13, "analphipy.utils.is_float", false]], "lam (analphipy.potential.squarewell attribute)": [[12, "analphipy.potential.SquareWell.lam", false]], "lam() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.lam", false]], "lam_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.lam_dbeta", false]], "lam_nf() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.lam_nf", false]], "lam_nf_dbeta() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.lam_nf_dbeta", false]], "lennardjones (class in analphipy.potential)": [[12, "analphipy.potential.LennardJones", false]], "lennardjonesnm (class in analphipy.potential)": [[12, "analphipy.potential.LennardJonesNM", false]], "lfs() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.lfs", false]], "m (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.m", false]], "mayer_diverg_js() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.mayer_diverg_js", false]], "measures (class in analphipy.measures)": [[10, "analphipy.measures.Measures", false]], "minimize() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.minimize", false]], "minimize() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.minimize", false]], "minimize() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.minimize", false]], "minimize() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.minimize", false]], "minimize() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.minimize", false]], "minimize_phi() (in module analphipy.utils)": [[13, "analphipy.utils.minimize_phi", false]], "module": [[9, "module-analphipy.base_potential", false], [10, "module-analphipy.measures", false], [11, "module-analphipy.norofrenkel", false], [12, "module-analphipy.potential", false], [13, "module-analphipy.utils", false]], "n (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.n", false]], "new_like() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.new_like", false]], "new_like() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.new_like", false]], "new_like() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.new_like", false]], "new_like() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.new_like", false]], "new_like() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.new_like", false]], "norofrenkelpair (class in analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.NoroFrenkelPair", false]], "partial_phi() (in module analphipy.utils)": [[13, "analphipy.utils.partial_phi", false]], "phi() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.phi", false]], "phi() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.phi", false]], "phi() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.phi", false]], "phi() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.phi", false]], "phi() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.phi", false]], "phi() (analphipy.potential.cubictable method)": [[12, "analphipy.potential.CubicTable.phi", false]], "phi() (analphipy.potential.generic method)": [[12, "analphipy.potential.Generic.phi", false]], "phi() (analphipy.potential.hardsphere method)": [[12, "analphipy.potential.HardSphere.phi", false]], "phi() (analphipy.potential.lennardjones method)": [[12, "analphipy.potential.LennardJones.phi", false]], "phi() (analphipy.potential.lennardjonesnm method)": [[12, "analphipy.potential.LennardJonesNM.phi", false]], "phi() (analphipy.potential.squarewell method)": [[12, "analphipy.potential.SquareWell.phi", false]], "phi() (analphipy.potential.yukawa method)": [[12, "analphipy.potential.Yukawa.phi", false]], "phi_base (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.phi_base", false]], "phi_base (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.phi_base", false]], "phi_base (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.phi_base", false]], "phi_func (analphipy.potential.generic attribute)": [[12, "analphipy.potential.Generic.phi_func", false]], "phi_left (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.phi_left", false]], "phi_min (analphipy.base_potential.phiabstract attribute)": [[9, "analphipy.base_potential.PhiAbstract.phi_min", false]], "phi_min (analphipy.base_potential.phibase attribute)": [[9, "analphipy.base_potential.PhiBase.phi_min", false]], "phi_min (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.phi_min", false]], "phi_min (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.phi_min", false]], "phi_min (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.phi_min", false]], "phi_min (analphipy.potential.analytic attribute)": [[12, "analphipy.potential.Analytic.phi_min", false]], "phi_rep() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.phi_rep", false]], "phi_right (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.phi_right", false]], "phi_table (analphipy.potential.cubictable attribute)": [[12, "analphipy.potential.CubicTable.phi_table", false]], "phiabstract (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiAbstract", false]], "phibase (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiBase", false]], "phicut (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiCut", false]], "phicutbase (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiCutBase", false]], "phidphi() (analphipy.potential.cubictable method)": [[12, "analphipy.potential.CubicTable.phidphi", false]], "philfs (class in analphipy.base_potential)": [[9, "analphipy.base_potential.PhiLFS", false]], "quad_segments() (in module analphipy.utils)": [[13, "analphipy.utils.quad_segments", false]], "r_min (analphipy.base_potential.phiabstract attribute)": [[9, "analphipy.base_potential.PhiAbstract.r_min", false]], "r_min (analphipy.base_potential.phibase attribute)": [[9, "analphipy.base_potential.PhiBase.r_min", false]], "r_min (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.r_min", false]], "r_min (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.r_min", false]], "r_min (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.r_min", false]], "r_min (analphipy.potential.analytic attribute)": [[12, "analphipy.potential.Analytic.r_min", false]], "r_table (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.r_table", false]], "rcut (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.rcut", false]], "rcut (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.rcut", false]], "rcut (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.rcut", false]], "rsq_table (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.rsq_table", false]], "secondvirial() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.secondvirial", false]], "secondvirial() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial", false]], "secondvirial() (in module analphipy.measures)": [[10, "analphipy.measures.secondvirial", false]], "secondvirial_dbeta() (analphipy.measures.measures method)": [[10, "analphipy.measures.Measures.secondvirial_dbeta", false]], "secondvirial_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial_dbeta", false]], "secondvirial_dbeta() (in module analphipy.measures)": [[10, "analphipy.measures.secondvirial_dbeta", false]], "secondvirial_sw() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.secondvirial_sw", false]], "secondvirial_sw() (in module analphipy.measures)": [[10, "analphipy.measures.secondvirial_sw", false]], "segments (analphipy.base_potential.phiabstract attribute)": [[9, "analphipy.base_potential.PhiAbstract.segments", false]], "segments (analphipy.base_potential.phibase attribute)": [[9, "analphipy.base_potential.PhiBase.segments", false]], "segments (analphipy.base_potential.phicut attribute)": [[9, "analphipy.base_potential.PhiCut.segments", false]], "segments (analphipy.base_potential.phicutbase attribute)": [[9, "analphipy.base_potential.PhiCutBase.segments", false]], "segments (analphipy.base_potential.philfs attribute)": [[9, "analphipy.base_potential.PhiLFS.segments", false]], "segments (analphipy.potential.analytic attribute)": [[12, "analphipy.potential.Analytic.segments", false]], "segments_converter() (in module analphipy.base_potential)": [[9, "analphipy.base_potential.segments_converter", false]], "segments_to_segments_cut() (in module analphipy.utils)": [[13, "analphipy.utils.segments_to_segments_cut", false]], "sig (analphipy.potential.hardsphere attribute)": [[12, "analphipy.potential.HardSphere.sig", false]], "sig (analphipy.potential.lennardjones attribute)": [[12, "analphipy.potential.LennardJones.sig", false]], "sig (analphipy.potential.lennardjonesnm attribute)": [[12, "analphipy.potential.LennardJonesNM.sig", false]], "sig (analphipy.potential.squarewell attribute)": [[12, "analphipy.potential.SquareWell.sig", false]], "sig (analphipy.potential.yukawa attribute)": [[12, "analphipy.potential.Yukawa.sig", false]], "sig() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.sig", false]], "sig_dbeta() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.sig_dbeta", false]], "sig_nf() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.sig_nf", false]], "sig_nf_dbeta() (in module analphipy.norofrenkel)": [[11, "analphipy.norofrenkel.sig_nf_dbeta", false]], "size (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.size", false]], "smax (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.smax", false]], "smin (analphipy.potential.cubictable property)": [[12, "analphipy.potential.CubicTable.smin", false]], "squarewell (class in analphipy.potential)": [[12, "analphipy.potential.SquareWell", false]], "sw_dict() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.sw_dict", false]], "table() (analphipy.norofrenkel.norofrenkelpair method)": [[11, "analphipy.norofrenkel.NoroFrenkelPair.table", false]], "to_measures() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.to_measures", false]], "to_measures() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.to_measures", false]], "to_measures() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.to_measures", false]], "to_measures() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.to_measures", false]], "to_measures() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.to_measures", false]], "to_nf() (analphipy.base_potential.phiabstract method)": [[9, "analphipy.base_potential.PhiAbstract.to_nf", false]], "to_nf() (analphipy.base_potential.phibase method)": [[9, "analphipy.base_potential.PhiBase.to_nf", false]], "to_nf() (analphipy.base_potential.phicut method)": [[9, "analphipy.base_potential.PhiCut.to_nf", false]], "to_nf() (analphipy.base_potential.phicutbase method)": [[9, "analphipy.base_potential.PhiCutBase.to_nf", false]], "to_nf() (analphipy.base_potential.philfs method)": [[9, "analphipy.base_potential.PhiLFS.to_nf", false]], "yukawa (class in analphipy.potential)": [[12, "analphipy.potential.Yukawa", false]], "z (analphipy.potential.yukawa attribute)": [[12, "analphipy.potential.Yukawa.z", false]]}, "objects": {"analphipy": [[9, 0, 0, "-", "base_potential"], [10, 0, 0, "-", "measures"], [11, 0, 0, "-", "norofrenkel"], [12, 0, 0, "-", "potential"], [13, 0, 0, "-", "utils"]], "analphipy.base_potential": [[9, 1, 1, "", "PhiAbstract"], [9, 1, 1, "", "PhiBase"], [9, 1, 1, "", "PhiCut"], [9, 1, 1, "", "PhiCutBase"], [9, 1, 1, "", "PhiLFS"], [9, 4, 1, "", "segments_converter"]], "analphipy.base_potential.PhiAbstract": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiBase": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "cut"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "lfs"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiCut": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_base"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "rcut"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiCutBase": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_base"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "rcut"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.base_potential.PhiLFS": [[9, 2, 1, "", "asdict"], [9, 2, 1, "", "assign"], [9, 2, 1, "", "assign_min_numeric"], [9, 2, 1, "", "dphidr"], [9, 2, 1, "", "minimize"], [9, 2, 1, "", "new_like"], [9, 2, 1, "", "phi"], [9, 3, 1, "", "phi_base"], [9, 3, 1, "", "phi_min"], [9, 3, 1, "", "r_min"], [9, 3, 1, "", "rcut"], [9, 3, 1, "", "segments"], [9, 2, 1, "", "to_measures"], [9, 2, 1, "", "to_nf"]], "analphipy.measures": [[10, 1, 1, "", "Measures"], [10, 4, 1, "", "diverg_js_cont"], [10, 4, 1, "", "diverg_kl_cont"], [10, 4, 1, "", "secondvirial"], [10, 4, 1, "", "secondvirial_dbeta"], [10, 4, 1, "", "secondvirial_sw"]], "analphipy.measures.Measures": [[10, 2, 1, "", "boltz_diverg_js"], [10, 2, 1, "", "mayer_diverg_js"], [10, 2, 1, "", "secondvirial"], [10, 2, 1, "", "secondvirial_dbeta"]], "analphipy.norofrenkel": [[11, 1, 1, "", "NoroFrenkelPair"], [11, 4, 1, "", "lam_nf"], [11, 4, 1, "", "lam_nf_dbeta"], [11, 4, 1, "", "sig_nf"], [11, 4, 1, "", "sig_nf_dbeta"]], "analphipy.norofrenkel.NoroFrenkelPair": [[11, 2, 1, "", "B2"], [11, 2, 1, "", "B2_dbeta"], [11, 2, 1, "", "B2_sw"], [11, 2, 1, "", "eps"], [11, 2, 1, "", "from_phi"], [11, 2, 1, "", "from_phi_class"], [11, 2, 1, "", "lam"], [11, 2, 1, "", "lam_dbeta"], [11, 2, 1, "", "phi_rep"], [11, 2, 1, "", "secondvirial"], [11, 2, 1, "", "secondvirial_dbeta"], [11, 2, 1, "", "secondvirial_sw"], [11, 2, 1, "", "sig"], [11, 2, 1, "", "sig_dbeta"], [11, 2, 1, "", "sw_dict"], [11, 2, 1, "", "table"]], "analphipy.potential": [[12, 1, 1, "", "Analytic"], [12, 1, 1, "", "CubicTable"], [12, 1, 1, "", "Generic"], [12, 1, 1, "", "HardSphere"], [12, 1, 1, "", "LennardJones"], [12, 1, 1, "", "LennardJonesNM"], [12, 1, 1, "", "SquareWell"], [12, 1, 1, "", "Yukawa"], [12, 4, 1, "", "factory"]], "analphipy.potential.Analytic": [[12, 3, 1, "", "phi_min"], [12, 3, 1, "", "r_min"], [12, 3, 1, "", "segments"]], "analphipy.potential.CubicTable": [[12, 3, 1, "", "bounds"], [12, 3, 1, "", "dphi_left"], [12, 3, 1, "", "dphi_right"], [12, 2, 1, "", "dphidr"], [12, 2, 1, "", "from_phi"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "phi_left"], [12, 3, 1, "", "phi_right"], [12, 3, 1, "", "phi_table"], [12, 2, 1, "", "phidphi"], [12, 5, 1, "", "r_table"], [12, 5, 1, "", "rsq_table"], [12, 5, 1, "", "size"], [12, 5, 1, "", "smax"], [12, 5, 1, "", "smin"]], "analphipy.potential.Generic": [[12, 2, 1, "", "dphidr"], [12, 3, 1, "", "dphidr_func"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "phi_func"]], "analphipy.potential.HardSphere": [[12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.LennardJones": [[12, 2, 1, "", "dphidr"], [12, 3, 1, "", "eps"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.LennardJonesNM": [[12, 2, 1, "", "dphidr"], [12, 3, 1, "", "eps"], [12, 3, 1, "", "m"], [12, 3, 1, "", "n"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.SquareWell": [[12, 3, 1, "", "eps"], [12, 3, 1, "", "lam"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"]], "analphipy.potential.Yukawa": [[12, 3, 1, "", "eps"], [12, 2, 1, "", "phi"], [12, 3, 1, "", "sig"], [12, 3, 1, "", "z"]], "analphipy.utils": [[13, 4, 1, "", "add_quad_kws"], [13, 4, 1, "", "combine_segmets"], [13, 4, 1, "", "is_float"], [13, 4, 1, "", "minimize_phi"], [13, 4, 1, "", "partial_phi"], [13, 4, 1, "", "quad_segments"], [13, 4, 1, "", "segments_to_segments_cut"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "terms": {"": [2, 4, 10, 11, 12], "0": [4, 5, 9, 10, 11, 12, 13], "0072387682627164": 4, "007239": 4, "01560": 5, "0156054202252172": 4, "016316891136000003": 4, "0274539879239069": 4, "027454": 4, "0389955732798468": 4, "038996": 4, "03899947745280001": 4, "03899948": 4, "0x116525b90": 4, "0x1165d21d0": 4, "0x116cdb710": 4, "0x1191e5ed0": 4, "0x11923cd60": 4, "1": [4, 5, 9, 10, 11, 12, 13], "100": 4, "105": 7, "11": 2, "113": [4, 11], "12": [2, 4, 12], "122462048309373": 4, "17": [4, 7], "1971": [4, 11], "1976": [4, 11], "1d": 10, "2": [4, 9, 10, 11, 12, 13], "2000": [4, 11], "2941": [4, 11], "296": 4, "297": 4, "298": 4, "2d": 10, "3": [2, 4, 11], "300": 4, "301": 4, "333901": 4, "333901317192492": 4, "3815918477142932": 4, "3815918477142934": 4, "3923506242906025": 4, "392351": 4, "3d": 10, "4": [4, 10, 12], "44097": 5, "469986": 4, "4699861479698415": 4, "48": [4, 11], "5": [4, 12], "5237": [4, 11], "5247": [4, 11], "54": [4, 11], "587": [4, 11], "6": [4, 12], "6162246932413373": 4, "616225": 4, "671": [4, 11], "8": 4, "80": 10, "9": 4, "93leibler_diverg": 10, "946847": 4, "9468474615554747": 4, "A": [3, 7, 11], "AND": 7, "AS": 7, "BE": 7, "BUT": 7, "BY": 7, "FOR": 7, "For": [2, 4, 9, 10, 11, 12, 13], "IN": 7, "If": [2, 4, 9, 10, 11, 12, 13], "In": 4, "It": [2, 4, 5], "NO": 7, "NOT": 7, "OF": 7, "OR": 7, "One": 2, "Or": [], "THAT": 7, "THE": 7, "TO": [2, 7], "The": [2, 4, 5, 9, 10, 11], "There": [2, 4], "These": 2, "To": [2, 4, 6], "WILL": 7, "WITH": 7, "_": 9, "_dvcorrect": 9, "_dvdrcorrect": 9, "_vcorrect": 9, "about": 2, "abov": [2, 4], "abstract": 9, "access": 11, "across": [2, 13], "activ": [2, 4, 5], "actual": 2, "ad": 4, "add": [2, 13], "add_quad_kw": 13, "addit": [2, 4], "addition": 2, "after": 2, "again": 2, "against": 2, "agenc": 7, "alia": [9, 11], "all": [2, 7], "allow": 2, "alreadi": 2, "also": [2, 7, 10], "altern": 2, "alwai": [2, 4, 6], "an": [2, 4, 7, 11], "anaconda": 2, "analphipi": [1, 2, 3, 6], "analysi": [4, 5], "analyt": [4, 12], "analyz": 11, "andersen": [4, 11], "anderson": 11, "ani": [2, 4, 7], "anyth": 2, "api": [4, 5], "appear": 7, "append": 2, "appos": 2, "appreci": 2, "appropri": 2, "ar": [2, 4, 5, 7, 9, 10, 11, 13], "arg": 13, "argument": [9, 10, 11, 12, 13], "aris": 7, "aros": 7, "arrai": [4, 9, 11, 12, 13], "articl": 2, "asarrai": 4, "asdict": 9, "assert_allclos": 4, "assign": 9, "assign_min_numer": [4, 9], "assist": 2, "assum": 10, "attract": [4, 11], "attribut": [9, 12], "author": [4, 5], "auto": 2, "autoenv": 2, "autom": 2, "automat": 2, "autoupd": 2, "avail": 1, "avoid": 2, "awai": 2, "ax": 4, "b": [2, 4, 10, 13], "b2": [10, 11], "b2_dbeta": 11, "b2_sw": 11, "b_2": 10, "back": 2, "barker": [4, 11], "base": [7, 10, 11, 12], "base_potenti": [4, 10, 11, 12], "bash": 2, "basic": 2, "becaus": 4, "becom": 2, "befor": 2, "begin": [9, 10, 11, 12], "behavior": [4, 11], "behind": 2, "being": 2, "best": 2, "beta": [4, 5, 10, 11], "beta_oth": 10, "better": 1, "bh": 11, "bin": 2, "bit": 2, "blog": 2, "boltz_diverg_j": 10, "boltzmann": [4, 10], "bool": [10, 11, 12, 13], "bound": [4, 9, 11, 12, 13], "branch": 2, "brief": 4, "browser": 2, "bugfix": 2, "build": 10, "bunch": 2, "bundl": 7, "c": [4, 5, 6, 11], "cach": [1, 2], "cached_decor": 1, "calcul": [4, 5, 11, 12], "call": [2, 4, 9, 11], "callabl": [4, 10, 11, 12, 13], "can": [2, 4, 10], "case": [2, 9, 10, 11, 12], "cd": 2, "cell": 4, "chandler": [4, 11], "chang": 2, "changelog": [2, 5], "check": 1, "checker": 2, "checkout": 2, "chemic": [4, 11], "choic": 2, "class": [4, 10, 11, 13], "classic": 5, "classmethod": [11, 12], "clean": 2, "clean_kernelspec": 2, "cleanup": 2, "clone": 2, "close": 2, "code": [2, 7], "coeffici": [4, 10, 11], "cog": 2, "cogapp": 2, "collect": 11, "com": 2, "combin": [10, 13], "combine_segmet": 13, "command": [2, 6], "commit": 1, "commitizen": 2, "common": 4, "commonli": 4, "compar": 10, "compil": 2, "complianc": 7, "comput": 11, "conda": [1, 5, 6], "condax": 2, "condit": 7, "config": 2, "conform": 7, "connect": 7, "consequenti": 7, "consid": [4, 7, 10], "constant": 4, "construct": 12, "constructor": [9, 12], "contain": [2, 4], "continu": 10, "contract": 7, "contribut": [5, 6], "conveni": [2, 4, 10], "convent": [2, 11], "convert": [4, 9], "copi": [2, 7], "copyright": 7, "core": 12, "correct": 9, "correspond": [4, 11, 13], "could": [2, 4], "cov": 2, "creat": [4, 5, 9, 11, 12], "creation": [4, 5], "credit": [2, 5], "cruft": 2, "cubic": 12, "cubict": 12, "cut": [3, 9, 12, 13], "cz": 2, "d": [1, 2, 4, 9, 10, 11, 12], "damag": 7, "datafram": 4, "db2dbeta": 10, "decomposit": 11, "deep": 4, "def": 4, "default": [2, 9, 11, 12, 13], "defin": [3, 5, 10, 11, 12], "dep": 2, "depend": [2, 4], "depth": 4, "deriv": [4, 9, 10, 11, 12], "descript": [2, 9, 11], "design": 4, "desir": 4, "detail": [2, 6], "determin": [4, 9, 11], "dev": 2, "develop": [1, 7], "diamet": [4, 11], "dict": 11, "dictionari": [4, 9, 11], "differ": 2, "direct": 7, "directli": 4, "directori": 2, "disclaim": 7, "discontinu": [4, 13], "displai": 2, "distanc": 11, "distribut": 7, "diverg": [5, 10], "diverg_js_cont": 10, "diverg_kl_cont": 10, "do": [2, 4], "docfil": 1, "docstr": 2, "document": [4, 7], "doe": 2, "domain": 7, "don": [2, 4], "done": [2, 4], "downsid": 2, "dphi": 12, "dphi_left": 12, "dphi_right": 12, "dphidr": [4, 9, 12], "dphidr_func": [4, 12], "dr": [4, 9, 10, 11, 12], "driven": 2, "dure": 4, "dv": 9, "dvrcut": 9, "e": [2, 9, 13], "e2": 10, "each": [2, 11, 13], "easier": 2, "easiest": [2, 4], "easili": 4, "edg": 2, "edit": 2, "effect": [4, 5, 11], "either": [2, 7, 12], "element": 10, "employe": 7, "en": 10, "enabl": 2, "end": [9, 10, 11, 12], "energi": [4, 9, 10, 11, 12], "enhanc": 2, "env": [1, 2], "ep": [4, 5, 10, 11, 12], "epsilon": [4, 10, 11, 12], "equal": 11, "equilibrium": [4, 11], "equival": 12, "err": [10, 11, 13], "error": [4, 7, 10, 11, 13], "escap": 2, "etc": 2, "evalu": [9, 10, 12], "even": [2, 12], "event": 7, "everi": 2, "everyth": 2, "exampl": [2, 3, 9, 10], "exp": [10, 11, 12], "expect": 2, "experiment": 2, "explain": 2, "explicitli": 4, "export": 2, "express": 7, "extend": [4, 5, 11], "extens": 2, "extern": 2, "extra": [2, 9, 10, 11, 12, 13], "f": [2, 10], "factor": 10, "factori": 12, "fals": [10, 11, 12, 13], "fast": 2, "faster": 2, "featur": 4, "feder": 7, "fee": 7, "feel": [2, 5], "fig": 4, "file": [1, 4], "final": 2, "find": [11, 13], "first": [0, 4], "fit": 7, "float": [9, 10, 11, 12, 13], "flow": 2, "fluid": [5, 10, 11], "follow": [2, 4, 5], "forc": [2, 4, 9, 11, 12], "forg": [1, 5, 6], "fork": 2, "form": [4, 9, 12, 13], "format": [9, 11], "formula": 11, "found": [4, 9, 13], "frac": [9, 10, 11, 12], "fragment": [1, 2], "free": [2, 5, 7], "freedom": 7, "freeli": 7, "frenekl": 5, "frenkel": [4, 5], "from": [2, 4, 7, 9, 10, 11, 12, 13], "from_phi": [11, 12], "from_phi_class": 11, "full": [1, 2], "full_output": [10, 11, 13], "func": 13, "function": [2, 4, 9, 10, 11, 12, 13], "functool": 4, "further": 4, "futur": 2, "g": [2, 4, 11], "g_with_min": 4, "gc": 2, "gener": [4, 12], "get": [2, 5], "ghp": 2, "git": 2, "github": 2, "given": [2, 4], "global": 2, "go": 2, "good": 2, "gov": 0, "govern": 7, "grant": 7, "grayskul": 2, "greatli": 2, "grid": 12, "guard": 13, "guess": [4, 9, 11, 13], "guid": 5, "h": [2, 4, 11, 12], "ha": 4, "had": 2, "handl": [1, 2], "hard": [4, 11, 12], "hardspher": 12, "hatch": 2, "have": [2, 4, 11], "help": 2, "henderson": [4, 11], "here": [2, 10], "herebi": 7, "hereund": 7, "highli": 2, "histori": 4, "hook": 2, "hopefulli": 2, "host": 2, "how": 2, "howev": 2, "html": 2, "http": 10, "i": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13], "impli": 7, "import": [2, 4, 5], "includ": [2, 4, 5, 7], "index": 8, "indic": 5, "indirect": 7, "inf": [4, 12], "infinit": 4, "info": [2, 4, 10], "inform": [4, 10, 13], "infring": 7, "infti": [10, 11, 12], "inherit": 9, "init": 2, "initi": 2, "injuri": 7, "inlin": 4, "instal": 5, "instanc": [9, 11], "instead": [2, 4], "institut": 7, "instruct": 2, "int": [9, 10, 11, 12, 13], "int_0": 11, "integr": [4, 9, 10, 11, 12, 13], "interact": 12, "interest": 4, "interfac": [4, 5], "interpol": 12, "invers": [4, 5, 10, 11], "investig": 4, "invok": 2, "ipython": 2, "is_float": 13, "isol": 2, "issu": 2, "its": 7, "j": [4, 11], "javascript": 2, "jensen": [5, 10], "jone": [4, 5, 12], "journal": [4, 11], "just": 9, "k": 4, "k_": 4, "keep": 2, "kei": 11, "kernel": 2, "key_format": 11, "keyword": 13, "kind": 7, "know": 4, "krekelberg": 0, "kullback": 10, "kw": [4, 9, 10, 11, 12, 13], "l": 2, "lam": [4, 5, 10, 11, 12], "lam_dbeta": 11, "lam_nf": 11, "lam_nf_dbeta": 11, "lambda": [4, 10, 11, 12], "last": 4, "latter": 4, "layout": 1, "left": [9, 10, 11, 12], "legal": 7, "leibel": 10, "leibler": 10, "len": [9, 10, 11, 12, 13], "length": [4, 10, 12], "lennard": [4, 5, 12], "lennardjon": [4, 5, 12], "lennardjonesnm": 12, "leq": [9, 10, 11, 12], "less": 12, "let": 4, "level": 2, "lf": [4, 9, 12], "liabl": 7, "licens": 5, "like": [2, 4, 9, 11, 12, 13], "likewis": [2, 4], "limit": [7, 9, 10, 11, 12, 13], "line": 4, "line2d": 4, "linear": [4, 9, 12], "link": 2, "linkcheck": 2, "linspac": 4, "lint": 2, "linter": [1, 2], "linux": 2, "liquid": [4, 11], "list": [2, 10, 11, 13], "littl": 2, "live": 2, "livehtml": 2, "lj": [4, 12], "ll": 2, "local": 2, "locat": [4, 9, 11, 12, 13], "lock": 2, "look": [2, 4], "loss": 7, "lower_bound": [9, 13], "m": [2, 4, 11, 12], "mac": 2, "mai": 2, "mailto": 0, "main": 5, "major": 2, "make": 9, "makefil": 2, "mamba": 2, "manag": 2, "mani": 2, "manual": 2, "map": [4, 10, 11], "marker": 4, "match": 11, "matplotlib": 4, "matter": [4, 11], "maximum": 12, "mayer": 10, "mayer_diverg_j": 10, "md": 2, "mean": [2, 4, 9], "meaning": 2, "measur": [4, 9], "mechan": 2, "meet": 2, "merchant": 7, "messag": 2, "method": [4, 6, 9, 10, 11, 12], "metric": [4, 5], "might": 2, "minim": [9, 13], "minima": 9, "minimize_phi": [9, 11, 13], "minimum": [4, 9, 11, 12, 13], "miss": [9, 11], "mix": 2, "model": 5, "modern": [4, 11], "modifi": 7, "modul": [1, 4, 8], "more": [2, 4, 10], "most": [2, 4, 6], "mostli": 2, "msg": 4, "multipl": [2, 11, 13], "must": 4, "my_lj_deriv_func": 4, "my_lj_func": 4, "mypi": [1, 2], "n": [2, 5, 9, 10, 11, 12, 13], "name": [2, 11, 12], "narrow": [2, 13], "nation": 7, "nbqa": 2, "nbval_raises_except": 4, "ndarrai": [9, 10, 11, 12], "need": [2, 4], "new": [1, 2, 4, 9], "new_lik": 9, "nf": [4, 9], "nice": 2, "nist": [0, 7], "nm": 12, "none": [0, 4, 9, 10, 11, 12, 13], "noro": [4, 5], "norofrenkel": [4, 9], "norofrenkelpair": [4, 9, 11], "note": [2, 4, 10, 12], "notic": 7, "now": [1, 2, 4], "noxfil": 2, "np": [4, 10], "numer": [4, 9, 11], "numpi": 4, "o": 4, "object": [4, 5, 9, 10, 11, 12, 13], "offici": 2, "old": 2, "one": [2, 5], "onli": [2, 4], "open": 2, "oper": 2, "opt": 2, "optim": [9, 13], "option": [9, 10, 11, 12, 13], "org": 10, "origin": 2, "other": [2, 4, 10], "otherwis": [7, 13], "our": 4, "out": 7, "output": [2, 9, 10, 11, 12, 13], "over": [2, 4, 9, 10, 11, 12, 13], "overrid": 2, "own": 3, "p": [0, 2, 4, 5, 10], "p_cut": 4, "p_lf": 4, "packag": [1, 4, 5], "page": 2, "pair": [4, 5, 9], "panda": 4, "param": 13, "paramet": [4, 5, 9, 10, 11, 12, 13], "parent": 2, "part": [2, 11], "parti": 7, "partial": [4, 13], "partial_phi": 13, "particl": [4, 11], "particular": [2, 7, 12], "pass": [2, 4, 10, 12, 13], "path": 2, "pd": 4, "pdf": 10, "perform": [4, 5, 9, 10, 11, 12, 13], "perhap": 4, "period": 2, "permiss": 7, "person": 7, "phi": [4, 9, 10, 11, 12, 13], "phi_": [9, 11], "phi_bas": 9, "phi_func": [4, 12], "phi_left": 12, "phi_min": [4, 9, 11, 12], "phi_ref": 11, "phi_rep": 11, "phi_right": 12, "phi_tabl": 12, "phiabstract": [4, 9, 10, 11], "phibas": [4, 9, 12], "phicut": [9, 12], "phicutbas": 9, "phidphi": 12, "philf": [9, 12], "phimin": [9, 13], "physic": [4, 11], "pi": 10, "pip": [5, 6], "pipx": 2, "place": 2, "plai": 2, "pleas": [2, 4, 5], "plot": 4, "plt": 4, "point": 2, "posit": [9, 12, 13], "possibl": 2, "post": 2, "potenti": [3, 5, 9, 13], "potential_nam": 12, "pre": [1, 5, 11], "prefer": [2, 6], "prevent": 2, "primer": 4, "print": 5, "probabl": 10, "project": [2, 4], "prop": [4, 11], "proper": 2, "properti": [4, 7, 12], "propos": 2, "protect": 7, "provid": [4, 5, 7], "public": 7, "publish": 2, "pull": 5, "purpos": 7, "pursuant": 7, "push": 2, "put": 2, "py": [2, 4], "pyenv": 2, "pyplot": 4, "pyproject": 2, "pyproject2conda": 2, "pyright": [1, 2], "pytest": 2, "python": [2, 4, 5], "python3": 2, "q": 10, "quad": [10, 11, 13], "quad_kw": [10, 11], "quad_seg": [10, 11, 13], "quadratur": 13, "question": 4, "r": [2, 4, 9, 10, 11, 12, 13], "r0": [4, 9, 13], "r_": 9, "r_cut": 9, "r_min": [4, 9, 11, 12], "r_tabl": 12, "rais": 4, "rang": [4, 9, 10, 11, 12, 13], "rcut": [4, 9, 12, 13], "re": 2, "readi": 2, "rebuild": 2, "recent": [4, 6], "recip": 2, "recommend": 2, "recurs": 2, "ref": 11, "refer": [3, 5, 10, 11], "reinstal": 2, "releas": 2, "rememb": 2, "remov": 2, "rep": 11, "repo": 2, "reproduc": 2, "repuls": [4, 11], "request": 5, "requir": 4, "respect": 11, "result": [4, 7, 10], "return": [4, 9, 10, 11, 12, 13], "review": [4, 11], "right": [9, 10, 11, 12], "rm": [4, 9, 11], "rmax": 12, "rmin": [9, 12, 13], "role": [4, 11], "rout": [2, 4], "routin": [5, 11], "rsq_tabl": 12, "run": [2, 6], "same": [4, 11], "scale": 4, "scene": 2, "scipi": [9, 10, 11, 13], "scope": 2, "script": 2, "scriv": 2, "search": [4, 9], "second": [4, 10, 11], "secondviri": [10, 11], "secondvirial_dbeta": [10, 11], "secondvirial_sw": [10, 11], "section": 7, "see": [1, 2, 4, 6, 10, 11], "segment": [4, 9, 10, 11, 12, 13], "segments_convert": 9, "segments_q": 10, "segments_to_segments_cut": 13, "self": [2, 4, 9, 10], "semgnet": 9, "send": 2, "separ": [9, 11, 12], "sequenc": [9, 10, 11, 12, 13], "serv": 2, "servic": 7, "set": [1, 2, 4, 9, 12, 13], "set_titl": 4, "sever": [4, 5], "shall": 7, "shannon": [5, 10], "shell": 2, "shift": [4, 9, 12], "should": [2, 4, 7, 9, 11, 12, 13], "sig": [4, 5, 10, 11, 12], "sig_dbeta": 11, "sig_nf": 11, "sig_nf_dbeta": 11, "sigma": [4, 10, 11, 12], "sigma_": 11, "similar": 2, "simpl": [3, 5, 11], "simpler": 4, "simpli": 2, "simplifi": 2, "sinc": 4, "singl": 2, "size": 12, "small": 2, "smax": 12, "smin": 12, "so": [2, 4, 9], "softwar": 7, "solver": 2, "some": [2, 4], "someth": 2, "sort": 13, "sourc": [2, 9, 10, 11, 12, 13], "space": 12, "special": 7, "specif": [2, 7, 12], "specifi": 4, "spectrum": 4, "spell": 2, "sphere": [4, 11, 12], "spheric": [5, 10], "sqrt": 12, "squar": [4, 10, 11, 12], "squarewel": 12, "src": 4, "stale": 2, "standard": 7, "state": [4, 7, 11], "statement": 7, "statutori": 7, "step": 2, "str": 10, "string": [10, 11], "structur": [4, 11], "style": 2, "sub": 9, "subclass": 12, "subject": 7, "submodul": 2, "subplot": 4, "suggest": [4, 5], "sum": [11, 13], "sum_error": 13, "sum_integr": 13, "suppli": 10, "support": [1, 2], "sure": 9, "sustain": 7, "sw": [10, 11, 12], "sw_dict": 11, "symlink": 2, "symmetr": [5, 10], "symmetrised_diverg": 10, "sync": 2, "system": 2, "t": [2, 4, 11], "tabl": [4, 5, 11, 12], "tag": 2, "take": 4, "tarbal": 2, "task": 2, "technologi": 7, "temperatur": [4, 5, 10, 11], "term": 4, "termin": 6, "test": [4, 11], "testdist": 2, "testpypi": 2, "text": 9, "thei": 2, "them": 2, "therefor": 2, "thi": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13], "thing": 4, "third": 7, "those": 7, "through": 2, "tight_layout": 4, "time": [2, 4], "titl": 7, "to_measur": [4, 9], "to_nf": [4, 5, 9], "toml": 2, "tort": 7, "total": 10, "tox": [1, 2], "traceback": 4, "troubleshoot": 2, "true": [10, 11, 12, 13], "try": [2, 11], "tupl": [9, 13], "two": [4, 10, 13], "type": [1, 4, 13], "typecheck": 2, "typic": 4, "under": 2, "underli": 2, "understand": [4, 11], "uniqu": 13, "unit": [4, 7], "unlock": [], "up": 2, "updat": [1, 2, 13], "upgrad": 2, "upload": 2, "upon": 7, "upper_bound": [9, 13], "us": [1, 3, 5, 7, 9, 10, 11, 12, 13], "user": [2, 5], "util": [1, 4, 5, 9, 10, 11], "uv": [], "uvx": 2, "uvxrun": 2, "v": [2, 9], "val": 13, "valu": [4, 9, 10, 11, 12, 13], "valueerror": 4, "variabl": [2, 4, 11], "varieti": 2, "vc": 2, "ve": 2, "venv": 2, "version": 12, "via": [1, 2], "view": [2, 11], "virial": [4, 10, 11], "virtual": 2, "volum": 10, "volume_int_func": 10, "volunt": 2, "w": 11, "wa": [4, 7], "wai": [2, 7], "want": [2, 4, 5], "warranti": 7, "we": [2, 4], "web": 2, "webpag": 2, "websit": 2, "week": [4, 11], "welcom": 2, "well": [4, 10, 11, 12], "what": [4, 11], "when": 2, "where": [2, 4, 9, 11, 12], "whether": [2, 7], "which": [2, 4, 9, 11, 12, 13], "while": 2, "whoever": 2, "why": [0, 3], "wide": 2, "width": [10, 12], "wiki": 10, "wikipedia": 10, "william": 0, "without": 7, "work": [2, 7], "workflow": 2, "would": 2, "wpk": 0, "wrap": 10, "x": [2, 4, 10], "yet": 0, "yk": 12, "you": [2, 4], "your": [2, 3, 6], "your_name_her": 2, "yukawa": 12, "z": 12, "zsh": 2}, "titles": ["Credits", "Changelog", "Contributing", "User guide", "Why <code class=\"docutils literal notranslate\"><span class=\"pre\">analphipy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">analphipy</span></code>", "Installation", "License", "Indices and tables", "Base classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.base_potential</span></code>)", "Routines to calculate measures of pair potentials (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.measures</span></code>)", "Noro-Frenkel pair potential analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.norofrenkel</span></code>)", "Classes/routines for pair potentials (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.potential</span></code>)", "Utilities module (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">analphipy.utils</span></code>)", "API Reference"], "titleterms": {"0": 1, "03": 1, "04": 1, "05": 1, "08": 1, "09": 1, "1": 1, "2": 1, "2022": 1, "2023": 1, "22": 1, "24": 1, "26": 1, "27": 1, "3": 1, "4": 1, "5": 1, "6": 1, "A": 4, "ad": 1, "analphipi": [4, 5, 9, 10, 11, 12, 13], "analysi": 11, "api": 14, "base": 9, "base_otenti": [], "base_potenti": 9, "bug": 2, "build": 2, "calcul": 10, "chang": 1, "changelog": 1, "check": 2, "class": [9, 12], "commit": 2, "conda": 2, "contribut": 2, "contributor": 0, "creat": 2, "creation": 2, "credit": 0, "cut": 4, "defin": 4, "develop": [0, 2], "distribut": 2, "doc": 2, "document": 2, "environ": 2, "exampl": [4, 5], "featur": [2, 5], "feedback": 2, "file": 2, "fix": 2, "frenkel": 11, "from": 6, "guid": 3, "guidelin": 2, "implement": 2, "indic": 8, "instal": [2, 6], "interpret": 2, "ipykernel": 2, "lead": 0, "licens": 7, "make": 2, "measur": 10, "modul": 13, "nbval": 2, "noro": 11, "norofrenkel": 11, "notebook": 2, "nox": 2, "option": 2, "overview": 5, "own": 4, "packag": 2, "pair": [10, 11, 12], "pip": 2, "potenti": [4, 10, 11, 12], "pre": 2, "pull": 2, "pypi": 2, "quick": 5, "refer": [4, 14], "releas": 6, "remov": 1, "report": 2, "request": 2, "requir": 2, "routin": [10, 12], "session": 2, "setup": 2, "simpl": 4, "sourc": 6, "stabl": 6, "start": 5, "statu": 5, "submit": 2, "tabl": 8, "test": 2, "tool": 2, "txt": 2, "type": 2, "unreleas": 1, "us": [2, 4], "usag": 5, "user": 3, "util": 13, "uv": 2, "v0": 1, "version": 2, "virtualenv": 2, "why": 4, "write": 2, "yaml": 2, "your": 4}})